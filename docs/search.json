[
  {
    "objectID": "pruefung.html",
    "href": "pruefung.html",
    "title": "1 Prüfung",
    "section": "",
    "text": "Es handelt sich um eine Einzelleistung.\n\n\n\n\n\nDie Prüfungsleistung dieses Moduls ist eine Portfolioprüfung.\nNach §17 Absatz 4, Satz 2 ff der APO der HS Ansbach (vom 9. Februar 2023):\n\nEine Portfolioprüfung ist eine modulbezogene Prüfungsleistung, die mehrere Prüfungsbestandteile umfasst, welche über die gesamte Lehrveranstaltung eines Moduls hinweg abgeprüft werden. ³Die einzelnen Prüfungsbestandteile ergeben eine Gesamtnote.\n\n\n\n\nDie Portfolioprüfung setzt sich aus folgenden Teilnoten zusammen:\n\nTeilnoten für die 10 Challenges\nTeilnote für ein abschließendes Fachgespräch\n\nDie (Gesamt-)Note setzt sich aus folgenden Teilen zusammen:\n\nTeilnote 1: Punktzahl bei den Challenges (50%)\nTeilnote 2: Note beim Fachgespräch (50%)\n\n\n\n\n\n\n\nHinweis\n\n\n\nJede Teilnote darf nicht schlechter als 4,0 bewertet werden, um die Prüfung als Ganze zu bestehen.\n\n\n\n\n\n\nBitte beachten Sie, dass sich die Challenges noch ändern können, solange sie nicht begonnen haben.\nBitte beachten Sie auch die Hinweise zum Thema ‘Programmieren’.\n\n\nJede Challenge wird wie folgt bepunktet:\n\n0 Punkte: nicht eingereicht oder keine substanzielle Lösungsansätze\n0,5 Punkte: substanzielle Lösungsansätze eingereicht, aber nicht komplett gelöst\n1 Punkt: komplett oder fast komplett gelöst\n\nPunkte-Noten-Zuordnung:\n\nmind. 50% der Punkte - Note 4,0\nmind. 60% der Punkte - Note 3,0\nmind. 70% der Punkte - Note 2,0\nmind. 80% der Punkte - Note 1,0\n\n\n\n\n\nWird eine Lösung für eine bestimmte Challenge nicht frist- und formgerecht eingereicht, so gilt sie als nicht eingereicht (0 Punkte).\nDie Bearbeitungszeit jeder Challenge ist jeweils eine Woche, d.h. die Lösung muss bis zum jeweiligen Abgabetermin eingereicht werden. Der späteste Abgabetermin ist der Vorabend des nächsten Unterrichtstermin - um 23.59.00. Beispiel: Der Unterricht findet wöchentlich am Dienstag statt. Die Challenge wird am Dienstag diese Woche besprochen und muss bis Montagabend der nächsten Woche eingereicht werden. Ausnahmen von dieser Regel (z.B. bei Feiertagen) werden rechtzeitig bekannt gegeben; s. auch den Modulverlaufsplan.\nIm Falle von Krankheit oder anderen schwerwiegenden Gründen, die eine fristgerechte Abgabe verhindern, ist die Lehrkraft unverzüglich zu informieren. Ein ärztliches Attest ist vorzulegen.\nPrüfen Sie vor Beginn der ersten Challenge, ob Sie auf die Daten zugreifen können und diese einlesen können. Melden Sie sich bei Problemen vor Beginn der (jeweiligen) Challenge beim Dozenten.\nGeben Sie in jeder eingereichten Datei Ihren Namen und die Nummer der Challenge an.\nBenennen Sie Ihre Dateien nach folgendem Schema: challenge01-max-mustermann.R (für R-Skripte) oder challenge01-max-mustermann.qmd (für Quarto-Dateien).\nNutzen Sie den Tidyverse-Styleguide.\nIm Fall eines Plagiats (d.h. wenn Sie Code von anderen übernehmen, ohne dies kenntlich zu machen), wird das Modul mit “nicht bestanden” bewertet.\nIm Fall, dass sich (quasi) identischer Text in mehreren Lösungen findet, wird dies als Plagiat gewertet bei allen Beteiligten.\n\n\n\n\n\n\nSofern das Ausgabeformat “Quarto” definiert ist, reichen Sie Ihre Ergebnisse bitte in Form eines Dokuments ein,\n\ndas die Lösung (der Aufgabenstellung) enthält,\ndas Ihren Computer-Code enthält (mit Syntax-Highlighting),\ndas Ihre Ausgaben zu Ihrem Computer-Code enthält,\ndas Ihre Gedanken und Überlegungen (also Text, angereichert ggf. mit Diagrammen etc.) enthält,\ndas übersichtlich und ansprechend formatiert ist,\ndas in RMarkdown oder Quarto erstellt wurde,\ndas die Grundlagen wissenschaftlichen Arbeitens beachtet,\ndas “Standalone” lesbar ist, also keine Abhängigkeiten zu anderen Dokumenten benötigt,\ndas als PDF- oder HTML-Datei formatiert ist,\ndas soweit als möglich reproduzierbar ist.\ndas kommentiert ist,\ndas wohl gegliedert ist\ndas durchläuft, ohne Fehler zu werfen.\n\n\n\n\nSofern als Ausgabeformat “R-Syntax” definiert ist, reichen Sie Ihren Code bitte in Form eines R-Skripts ein,\n\ndas die Lösung der Challenge enthält.\nreproduzierbar ist\ndurchläuft, ohne Fehler zu werfen\nkommentiert ist\nwohl gegliedert ist\n\n\n\n\n\n\nDie Termine für das Fachgespräch liegen in der Prüfungszeit und werden rechtzeitig bekannt gegeben über geeignete Kanäle.\nWeitere Hinweise zum Fachgespräch finden sich im entsprechenden Kapitel im Hinweisbuch.\n\n\nPrüfungsgegenstand sind alle Inhalte aus dem Unterricht. Ein Schwerpunkt liegt auf den Musterlösungen sowie den eigenen, selbst eingereichten Lösungen der Challenges.\n\n\n\n\nErklären Sie den Aufbau einer Funktion in R!\nWie haben Sie die Glotzdauer berechnet?\nWas besagt die Variable idvisit?\nWie groß war der von uns verwendete Rohdatensatz (Zeilen, Spalten)?\nNennen Sie ein Beispiel für einen gut und einen schlecht gewählten Objektnamen!\nErläutern Sie, wie die Daten laut Musterlösung in R importiert wurden.\nMit welchem R-Paket wurden laut Musterlösung Datums-/Zeitangaben bearbeitet?\nErklären Sie eine Funktion aus dem R-Paket stringr!\nWas macht die Funktion purrr::map?\nWas ist das “Tidyverse”?\nWann ist ein Mittelwert mehr bzw. weniger aussagekräftig?\nWas macht ein gutes Datendiagramm aus?\nIm Rohdatensatz: Es gibt ein Muster in den Spaltennamen. Was fällt Ihnen dazu auf?\nIm Rohdatensatz: Was fällt Ihnen zur Anteil und zum Muster der fehlenden Werte auf?\nWas versteht man unter “Regex” im Kontext der String-Verarbeitung?\nWie kann man leere Zeilen oder leere Spalten auf einem Dataframe entfernen?\nWie kann man konstante Zeilen oder Spalten aus einem Dataframe entfernen? Warum sollte man das tun?\nErläutern Sie folgenden R-Code:\n\nout &lt;1. list()\nfor (i in 1:length(datafiles_list)) {\n out[[i]] &lt;1. read.csv(datafiles_list[i]) \n}\n\nWie kann man eine Spalte an den Anfang eines Dataframes ziehen?\nNennen Sie Vor1. und Nachteile des Einsatzes von Excel für eine Aufgabe wie das Projekt im vorliegenden Modul.\nNennen Sie eine Funktion, um eine als String (character) formatierte Spalte (z.B. “1970-01-01”) in ein Datums-/Zeitobjekt umzuwandeln!\nErklären Sie folgende Syntax:\n\nstr_remove(string = names(d),\n           pattern = \"_[:digit:].*\") |&gt; \n  unique()\n\nErklären Sie folgende Syntax:\n\nd_only_subtitles_and_timestamps |&gt; \n   mutate(across(contains(\"timestamp\"), ~ as_datetime(as.numeric(.x))))\n\nErklären Sie folgende Syntax:\n\nd_time_repaired |&gt; \n  filter(!str_detect(actionDetails_0_subtitle, \"developer|lecturer|admin\")) \n\nErläutern Sie, was mit “Pivotieren” gemeint ist im Kontext des vorliegenden Projekts der Datenanalyse. Was ist der Nutzen des Pivotierens?\nGeben Sie eine Syntax an, um alle Spalten als Strings (character) zu formatieren.\nErläutern Sie den Aufbau einer Targets-Pipeline.\nBeim zeilenweisen Zusammenbinden einer großen Zahl an CSV-Dateien kann es zu Problemen kommen. So auch im vorliegenden Projekt. Erläutern Sie ein Problem und schlagen Sie eine Lösung vor.\nAn welchen Wochentagen und an welchen Uhrzeiten wird Hans bevorzugt besucht?\nWas ist der älteste und was der neueste Timestamp in unserem Datensatz?\nBeschreiben Sie ein Problem, das während Ihrer Analyse aufgetreten ist und wie Sie es gelöst haben. Was haben Sie daraus gelernt?\nWas würden Sie anders machen, wenn Sie die Daten erneut analysieren würden?\nWas ist eine (wichtige) Sache, die Sie während der Analyse gelernt haben?\nWas macht die “Pfeife” |&gt; in einer R-Syntax?\nDiskutieren Sie die Für und Wider einer kompetenzorientierten Prüfung, also einer Prüfung, in der es weniger um Kenntnis theoretischer Inhalte, sondern um die Kompetenz zur Lösung eines Problems geht.\nHier ist ein Auszug aus Ihrer Lösung zu Challenge X. Erläutern Sie Ihre Syntax zu Aufgabe Y!\nErläutern Sie einen Weg, um die Musterlösung auf Geschwindigkeit zu optimieren.\nGeben Sie ein Beispiel für eine zu wenig allgemeine Funktion! Beispiel: read_csv_meine_lieblingsdatei().\nWas sind Vorteile, Funktionen beim Programmieren zu nutzen?\n\n\n\n\n\nBitte beachten Sie die allgemeinen Hinweise im Hinweisbuch besonders die allgemeinen Prüfungshinweise sowie die Hinweise zum Programmieren.\nBei Fragen, die eine Verteilung als Antwort haben, sollten Sie die Verteilung mit statistischen Methoden beschreiben. Beispiel: “Was ist die typische Verweildauer?” - Antwort: “Die mittlere Verweildauer beträgt 3 Minuten, mit einer Standardabweichung von 2 Minuten. Die Verteilung ist rechtsschief.” Eine Visualisierung der Verteilung bietet sich an (z.B. mit einem Histogramm).",
    "crumbs": [
      "Prüfung"
    ]
  },
  {
    "objectID": "pruefung.html#allgemeines",
    "href": "pruefung.html#allgemeines",
    "title": "1 Prüfung",
    "section": "",
    "text": "Es handelt sich um eine Einzelleistung.",
    "crumbs": [
      "Prüfung"
    ]
  },
  {
    "objectID": "pruefung.html#prüfungsleistung-portfolio-prüfung",
    "href": "pruefung.html#prüfungsleistung-portfolio-prüfung",
    "title": "1 Prüfung",
    "section": "",
    "text": "Die Prüfungsleistung dieses Moduls ist eine Portfolioprüfung.\nNach §17 Absatz 4, Satz 2 ff der APO der HS Ansbach (vom 9. Februar 2023):\n\nEine Portfolioprüfung ist eine modulbezogene Prüfungsleistung, die mehrere Prüfungsbestandteile umfasst, welche über die gesamte Lehrveranstaltung eines Moduls hinweg abgeprüft werden. ³Die einzelnen Prüfungsbestandteile ergeben eine Gesamtnote.\n\n\n\n\nDie Portfolioprüfung setzt sich aus folgenden Teilnoten zusammen:\n\nTeilnoten für die 10 Challenges\nTeilnote für ein abschließendes Fachgespräch\n\nDie (Gesamt-)Note setzt sich aus folgenden Teilen zusammen:\n\nTeilnote 1: Punktzahl bei den Challenges (50%)\nTeilnote 2: Note beim Fachgespräch (50%)\n\n\n\n\n\n\n\nHinweis\n\n\n\nJede Teilnote darf nicht schlechter als 4,0 bewertet werden, um die Prüfung als Ganze zu bestehen.",
    "crumbs": [
      "Prüfung"
    ]
  },
  {
    "objectID": "pruefung.html#teil-1-wöchentliche-challenges",
    "href": "pruefung.html#teil-1-wöchentliche-challenges",
    "title": "1 Prüfung",
    "section": "",
    "text": "Bitte beachten Sie, dass sich die Challenges noch ändern können, solange sie nicht begonnen haben.\nBitte beachten Sie auch die Hinweise zum Thema ‘Programmieren’.\n\n\nJede Challenge wird wie folgt bepunktet:\n\n0 Punkte: nicht eingereicht oder keine substanzielle Lösungsansätze\n0,5 Punkte: substanzielle Lösungsansätze eingereicht, aber nicht komplett gelöst\n1 Punkt: komplett oder fast komplett gelöst\n\nPunkte-Noten-Zuordnung:\n\nmind. 50% der Punkte - Note 4,0\nmind. 60% der Punkte - Note 3,0\nmind. 70% der Punkte - Note 2,0\nmind. 80% der Punkte - Note 1,0\n\n\n\n\n\nWird eine Lösung für eine bestimmte Challenge nicht frist- und formgerecht eingereicht, so gilt sie als nicht eingereicht (0 Punkte).\nDie Bearbeitungszeit jeder Challenge ist jeweils eine Woche, d.h. die Lösung muss bis zum jeweiligen Abgabetermin eingereicht werden. Der späteste Abgabetermin ist der Vorabend des nächsten Unterrichtstermin - um 23.59.00. Beispiel: Der Unterricht findet wöchentlich am Dienstag statt. Die Challenge wird am Dienstag diese Woche besprochen und muss bis Montagabend der nächsten Woche eingereicht werden. Ausnahmen von dieser Regel (z.B. bei Feiertagen) werden rechtzeitig bekannt gegeben; s. auch den Modulverlaufsplan.\nIm Falle von Krankheit oder anderen schwerwiegenden Gründen, die eine fristgerechte Abgabe verhindern, ist die Lehrkraft unverzüglich zu informieren. Ein ärztliches Attest ist vorzulegen.\nPrüfen Sie vor Beginn der ersten Challenge, ob Sie auf die Daten zugreifen können und diese einlesen können. Melden Sie sich bei Problemen vor Beginn der (jeweiligen) Challenge beim Dozenten.\nGeben Sie in jeder eingereichten Datei Ihren Namen und die Nummer der Challenge an.\nBenennen Sie Ihre Dateien nach folgendem Schema: challenge01-max-mustermann.R (für R-Skripte) oder challenge01-max-mustermann.qmd (für Quarto-Dateien).\nNutzen Sie den Tidyverse-Styleguide.\nIm Fall eines Plagiats (d.h. wenn Sie Code von anderen übernehmen, ohne dies kenntlich zu machen), wird das Modul mit “nicht bestanden” bewertet.\nIm Fall, dass sich (quasi) identischer Text in mehreren Lösungen findet, wird dies als Plagiat gewertet bei allen Beteiligten.\n\n\n\n\n\n\nSofern das Ausgabeformat “Quarto” definiert ist, reichen Sie Ihre Ergebnisse bitte in Form eines Dokuments ein,\n\ndas die Lösung (der Aufgabenstellung) enthält,\ndas Ihren Computer-Code enthält (mit Syntax-Highlighting),\ndas Ihre Ausgaben zu Ihrem Computer-Code enthält,\ndas Ihre Gedanken und Überlegungen (also Text, angereichert ggf. mit Diagrammen etc.) enthält,\ndas übersichtlich und ansprechend formatiert ist,\ndas in RMarkdown oder Quarto erstellt wurde,\ndas die Grundlagen wissenschaftlichen Arbeitens beachtet,\ndas “Standalone” lesbar ist, also keine Abhängigkeiten zu anderen Dokumenten benötigt,\ndas als PDF- oder HTML-Datei formatiert ist,\ndas soweit als möglich reproduzierbar ist.\ndas kommentiert ist,\ndas wohl gegliedert ist\ndas durchläuft, ohne Fehler zu werfen.\n\n\n\n\nSofern als Ausgabeformat “R-Syntax” definiert ist, reichen Sie Ihren Code bitte in Form eines R-Skripts ein,\n\ndas die Lösung der Challenge enthält.\nreproduzierbar ist\ndurchläuft, ohne Fehler zu werfen\nkommentiert ist\nwohl gegliedert ist",
    "crumbs": [
      "Prüfung"
    ]
  },
  {
    "objectID": "pruefung.html#teil-2-fachgespräch",
    "href": "pruefung.html#teil-2-fachgespräch",
    "title": "1 Prüfung",
    "section": "",
    "text": "Die Termine für das Fachgespräch liegen in der Prüfungszeit und werden rechtzeitig bekannt gegeben über geeignete Kanäle.\nWeitere Hinweise zum Fachgespräch finden sich im entsprechenden Kapitel im Hinweisbuch.\n\n\nPrüfungsgegenstand sind alle Inhalte aus dem Unterricht. Ein Schwerpunkt liegt auf den Musterlösungen sowie den eigenen, selbst eingereichten Lösungen der Challenges.\n\n\n\n\nErklären Sie den Aufbau einer Funktion in R!\nWie haben Sie die Glotzdauer berechnet?\nWas besagt die Variable idvisit?\nWie groß war der von uns verwendete Rohdatensatz (Zeilen, Spalten)?\nNennen Sie ein Beispiel für einen gut und einen schlecht gewählten Objektnamen!\nErläutern Sie, wie die Daten laut Musterlösung in R importiert wurden.\nMit welchem R-Paket wurden laut Musterlösung Datums-/Zeitangaben bearbeitet?\nErklären Sie eine Funktion aus dem R-Paket stringr!\nWas macht die Funktion purrr::map?\nWas ist das “Tidyverse”?\nWann ist ein Mittelwert mehr bzw. weniger aussagekräftig?\nWas macht ein gutes Datendiagramm aus?\nIm Rohdatensatz: Es gibt ein Muster in den Spaltennamen. Was fällt Ihnen dazu auf?\nIm Rohdatensatz: Was fällt Ihnen zur Anteil und zum Muster der fehlenden Werte auf?\nWas versteht man unter “Regex” im Kontext der String-Verarbeitung?\nWie kann man leere Zeilen oder leere Spalten auf einem Dataframe entfernen?\nWie kann man konstante Zeilen oder Spalten aus einem Dataframe entfernen? Warum sollte man das tun?\nErläutern Sie folgenden R-Code:\n\nout &lt;1. list()\nfor (i in 1:length(datafiles_list)) {\n out[[i]] &lt;1. read.csv(datafiles_list[i]) \n}\n\nWie kann man eine Spalte an den Anfang eines Dataframes ziehen?\nNennen Sie Vor1. und Nachteile des Einsatzes von Excel für eine Aufgabe wie das Projekt im vorliegenden Modul.\nNennen Sie eine Funktion, um eine als String (character) formatierte Spalte (z.B. “1970-01-01”) in ein Datums-/Zeitobjekt umzuwandeln!\nErklären Sie folgende Syntax:\n\nstr_remove(string = names(d),\n           pattern = \"_[:digit:].*\") |&gt; \n  unique()\n\nErklären Sie folgende Syntax:\n\nd_only_subtitles_and_timestamps |&gt; \n   mutate(across(contains(\"timestamp\"), ~ as_datetime(as.numeric(.x))))\n\nErklären Sie folgende Syntax:\n\nd_time_repaired |&gt; \n  filter(!str_detect(actionDetails_0_subtitle, \"developer|lecturer|admin\")) \n\nErläutern Sie, was mit “Pivotieren” gemeint ist im Kontext des vorliegenden Projekts der Datenanalyse. Was ist der Nutzen des Pivotierens?\nGeben Sie eine Syntax an, um alle Spalten als Strings (character) zu formatieren.\nErläutern Sie den Aufbau einer Targets-Pipeline.\nBeim zeilenweisen Zusammenbinden einer großen Zahl an CSV-Dateien kann es zu Problemen kommen. So auch im vorliegenden Projekt. Erläutern Sie ein Problem und schlagen Sie eine Lösung vor.\nAn welchen Wochentagen und an welchen Uhrzeiten wird Hans bevorzugt besucht?\nWas ist der älteste und was der neueste Timestamp in unserem Datensatz?\nBeschreiben Sie ein Problem, das während Ihrer Analyse aufgetreten ist und wie Sie es gelöst haben. Was haben Sie daraus gelernt?\nWas würden Sie anders machen, wenn Sie die Daten erneut analysieren würden?\nWas ist eine (wichtige) Sache, die Sie während der Analyse gelernt haben?\nWas macht die “Pfeife” |&gt; in einer R-Syntax?\nDiskutieren Sie die Für und Wider einer kompetenzorientierten Prüfung, also einer Prüfung, in der es weniger um Kenntnis theoretischer Inhalte, sondern um die Kompetenz zur Lösung eines Problems geht.\nHier ist ein Auszug aus Ihrer Lösung zu Challenge X. Erläutern Sie Ihre Syntax zu Aufgabe Y!\nErläutern Sie einen Weg, um die Musterlösung auf Geschwindigkeit zu optimieren.\nGeben Sie ein Beispiel für eine zu wenig allgemeine Funktion! Beispiel: read_csv_meine_lieblingsdatei().\nWas sind Vorteile, Funktionen beim Programmieren zu nutzen?",
    "crumbs": [
      "Prüfung"
    ]
  },
  {
    "objectID": "pruefung.html#sonstiges",
    "href": "pruefung.html#sonstiges",
    "title": "1 Prüfung",
    "section": "",
    "text": "Bitte beachten Sie die allgemeinen Hinweise im Hinweisbuch besonders die allgemeinen Prüfungshinweise sowie die Hinweise zum Programmieren.\nBei Fragen, die eine Verteilung als Antwort haben, sollten Sie die Verteilung mit statistischen Methoden beschreiben. Beispiel: “Was ist die typische Verweildauer?” - Antwort: “Die mittlere Verweildauer beträgt 3 Minuten, mit einer Standardabweichung von 2 Minuten. Die Verteilung ist rechtsschief.” Eine Visualisierung der Verteilung bietet sich an (z.B. mit einem Histogramm).",
    "crumbs": [
      "Prüfung"
    ]
  },
  {
    "objectID": "loesungen.html",
    "href": "loesungen.html",
    "title": "1 Lösungen",
    "section": "",
    "text": "1 Lösungen\n😁🥳😀\n\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "imprint.html",
    "href": "imprint.html",
    "title": "1 Impressum",
    "section": "",
    "text": "Angaben gemäß § 5 DDG\nSebastian Sauer, Residenzstr. 10, 90522 Ansbach\n\n\nSebastian Sauer\n\n\n\nTelefon: 0981 4877 0, E-Mail: sebastian.sauer@hs-ansbach.de\n\n\n\nNürnberg\n\n\n\nSebastian Sauer, Residenzstr. 10, 90522 Ansbach\n\n\n\n\n\nDie Inhalte unserer Seiten wurden mit größter Sorgfalt erstellt. Für die Richtigkeit, Vollständigkeit und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen. Als Diensteanbieter sind wir gemäß § 7 Abs.1 DDG für eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 DDG sind wir als Diensteanbieter jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung möglich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.\n\n\n\nUnser Angebot enthält Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen. Für die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\n\n\n\nDie durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung außerhalb der Grenzen des Urheberrechtes bedürfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur für den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.\n\n\n\nDie Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten möglich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit möglich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdrückliche Zustimmung nicht an Dritte weitergegeben. Wir weisen darauf hin, dass die Datenübertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitslücken aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht möglich. Der Nutzung von im Rahmen der Impressumspflicht veröffentlichten Kontaktdaten durch Dritte zur Übersendung von nicht ausdrücklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdrücklich widersprochen. Die Betreiber der Seiten behalten sich ausdrücklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.\n\n\n\n\nImpressum vom Impressum Generator der Kanzlei Hasselbach, Fachanwälte für Familienrecht"
  },
  {
    "objectID": "imprint.html#vertreten-durch",
    "href": "imprint.html#vertreten-durch",
    "title": "1 Impressum",
    "section": "",
    "text": "Sebastian Sauer"
  },
  {
    "objectID": "imprint.html#kontakt",
    "href": "imprint.html#kontakt",
    "title": "1 Impressum",
    "section": "",
    "text": "Telefon: 0981 4877 0, E-Mail: sebastian.sauer@hs-ansbach.de"
  },
  {
    "objectID": "imprint.html#aufsichtsbehörde",
    "href": "imprint.html#aufsichtsbehörde",
    "title": "1 Impressum",
    "section": "",
    "text": "Nürnberg"
  },
  {
    "objectID": "imprint.html#verantwortlich-für-den-inhalt-nach-55-abs.-2-rstv",
    "href": "imprint.html#verantwortlich-für-den-inhalt-nach-55-abs.-2-rstv",
    "title": "1 Impressum",
    "section": "",
    "text": "Sebastian Sauer, Residenzstr. 10, 90522 Ansbach"
  },
  {
    "objectID": "imprint.html#haftungsausschluss",
    "href": "imprint.html#haftungsausschluss",
    "title": "1 Impressum",
    "section": "",
    "text": "Die Inhalte unserer Seiten wurden mit größter Sorgfalt erstellt. Für die Richtigkeit, Vollständigkeit und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen. Als Diensteanbieter sind wir gemäß § 7 Abs.1 DDG für eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 DDG sind wir als Diensteanbieter jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung möglich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.\n\n\n\nUnser Angebot enthält Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen. Für die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\n\n\n\nDie durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung außerhalb der Grenzen des Urheberrechtes bedürfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur für den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.\n\n\n\nDie Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten möglich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit möglich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdrückliche Zustimmung nicht an Dritte weitergegeben. Wir weisen darauf hin, dass die Datenübertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitslücken aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht möglich. Der Nutzung von im Rahmen der Impressumspflicht veröffentlichten Kontaktdaten durch Dritte zur Übersendung von nicht ausdrücklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdrücklich widersprochen. Die Betreiber der Seiten behalten sich ausdrücklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.\n\n\n\n\nImpressum vom Impressum Generator der Kanzlei Hasselbach, Fachanwälte für Familienrecht"
  },
  {
    "objectID": "data-privacy.html",
    "href": "data-privacy.html",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Diese Datenschutzhinweise informieren Sie über die Art, den Umfang und den Zweck der Verarbeitung von personenbezogenen Daten (nachfolgend “Daten”) im Rahmen der Nutzung dieser Webseite (nachfolgend “Webseite”), die auf GitHub gehostet wird.\n\n\nProf. Dr. habil. Sebastian Sauer, Residenzstr. 10, 90522 Ansbach, sebastian.sauer@hs-ansbach.de\n\n\n\nUnsere Webseite wird von GitHub Inc., 88 Colin P. Kelly Jr. St, San Francisco, CA 94107, USA (“GitHub”) gehostet. GitHub verarbeitet in unserem Auftrag Daten von Webseitenbesuchern (z.B. IP-Adressen). Dies ist für den Betrieb der Webseite und die Bereitstellung von Inhalten erforderlich. GitHub ist unter dem Privacy-Shield-Abkommen zertifiziert und bietet hierdurch eine Garantie, das europäische Datenschutzrecht einzuhalten (https://www.privacyshield.gov/participant?id=a2zt0000000GnywAAC&status=Active).\nWeitere Informationen zum Datenschutz bei GitHub finden Sie in der Datenschutzerklärung von GitHub: https://docs.github.com/de/site-policy/privacy-policies/github-general-privacy-statement\n\n\n\n\n\n\nBei jedem Zugriff auf unsere Webseite erfasst GitHub automatisiert Daten und speichert diese in Server-Log-Dateien. Zu diesen Daten gehören: IP-Adresse des zugreifenden Geräts Datum und Uhrzeit des Zugriffs Name und URL der abgerufenen Datei Webseite, von der aus der Zugriff erfolgt (Referrer-URL) Verwendeter Browser und ggf. das Betriebssystem des zugreifenden Geräts Name des Access-Providers\nDie Verarbeitung dieser Daten erfolgt, um die Funktionsfähigkeit der Webseite sicherzustellen, die Nutzung der Webseite zu analysieren und unser Angebot zu verbessern. Rechtsgrundlage für die Datenverarbeitung ist Art. 6 Abs. 1 lit. f DSGVO (berechtigtes Interesse). Unser berechtigtes Interesse liegt in den oben genannten Zwecken.\n\n\n\nUnsere Webseite verwendet keine Cookies.\n\n\n\nEs können Inhalte von Drittanbietern wie Videos, Schriftarten oder Karten eingebunden sein. Beim Abruf dieser Inhalte wird Ihre IP-Adresse möglicherweise an den Drittanbieter übertragen. Für weitere Informationen konsultiere bitte die Datenschutzrichtlinien der jeweiligen Anbieter.\n\n\n\n\nSie habengegenüber uns folgende Rechte hinsichtlich der dich betreffenden personenbezogenen Daten: Recht auf Auskunft (Art. 15 DSGVO) Recht auf Berichtigung (Art. 16 DSGVO) Recht auf Löschung (Art. 17 DSGVO) Recht auf Einschränkung der Verarbeitung (Art. 18 DSGVO) Recht auf Datenübertragbarkeit (Art. 20 DSGVO) Recht auf Widerspruch gegen die Verarbeitung (Art. 21 DSGVO)\nSie haben zudem das Recht, sich bei einer Datenschutz-Aufsichtsbehörde über die Verarbeitung deiner personenbezogenen Daten durch uns zu beschweren.\n\n\n\nNachstehend geben wir Ihnen eine Übersicht der rechtlichen Grundlagen der DSGVO, auf deren Basis personenbezogene Daten auf dieser Webseite verarbeitet werden. Bitte beachten Sie, dass neben den Regelungen der DSGVO auch nationale Datenschutzvorgaben in Ihrem oder unserem Land relevant sein können. Sofern in Einzelfällen spezifische Rechtsgrundlagen gelten, werden diese in der Datenschutzerklärung gesondert erwähnt.\n\n\nDie Verarbeitung personenbezogener Daten ist erforderlich zur Erfüllung eines Vertrags, bei dem die betroffene Person Vertragspartei ist, oder zur Durchführung vorvertraglicher Maßnahmen, die auf Anfrage der betroffenen Person erfolgen.\n\n\n\nDie Datenverarbeitung erfolgt zur Wahrung berechtigter Interessen des Verantwortlichen oder eines Dritten, sofern keine entgegenstehenden Interessen, Grundrechte oder Grundfreiheiten der betroffenen Person, die den Schutz ihrer personenbezogenen Daten erfordern, überwiegen.\n\n\n\nNeben der DSGVO gelten in Deutschland nationale Datenschutzvorgaben, insbesondere das Bundesdatenschutzgesetz (BDSG). Das BDSG beinhaltet spezielle Regelungen zum Recht auf Auskunft, Löschung, Widerspruch, zur Verarbeitung besonderer Kategorien personenbezogener Daten, zur Verarbeitung für andere Zwecke sowie zur Datenübermittlung und zu automatisierten Einzelentscheidungen einschließlich Profiling. In bestimmten Fällen können auch Datenschutzgesetze der Bundesländer Anwendung finden.\n\n\n\nDiese Datenschutzhinweise berücksichtigen die Vorgaben sowohl der DSGVO als auch des Schweizer Datenschutzgesetzes (DSG). Zur besseren Verständlichkeit und zur Vermeidung wiederholter Begriffsdefinitionen werden die Begriffe der DSGVO verwendet. Begriffe wie „Verarbeitung“, „personenbezogene Daten“, „berechtigtes Interesse“ und „besondere Kategorien von Daten“ entsprechen inhaltlich den Begriffen „Bearbeitung“, „Personendaten“, „überwiegendes Interesse“ und „besonders schützenswerte Personendaten“ des Schweizer DSG. Die genaue Auslegung und Anwendung erfolgt jedoch gemäß den Vorgaben des Schweizer DSG.\n\n\n\n\nWir setzen angemessene technische und organisatorische Maßnahmen zum Schutz Ihrer Daten entsprechend den gesetzlichen Anforderungen um. Dabei berücksichtigen wir den aktuellen Stand der Technik, die Implementierungskosten, Art, Umfang, Umstände und Zweck der Verarbeitung sowie die Wahrscheinlichkeit und Schwere möglicher Risiken für die Rechte und Freiheiten betroffener Personen.\nZu den Schutzmaßnahmen gehören insbesondere: Sicherstellung der Vertraulichkeit, Integrität und Verfügbarkeit von Daten durch Kontrolle des Zugriffs auf die Daten und die Infrastruktur, der Eingaben, Weitergaben und Trennungen von Daten. Zudem haben wir Verfahren eingerichtet, um die Rechte betroffener Personen zu gewährleisten, Daten zu löschen und angemessen auf Bedrohungen zu reagieren. Bereits in der Entwicklung und Auswahl von Hard- und Software sowie Verfahren berücksichtigen wir Datenschutzprinzipien wie Datenschutz durch Technikgestaltung und datenschutzfreundliche Voreinstellungen.\nSicherung von Online-Verbindungen mit TLS-/SSL-Verschlüsselung (HTTPS) Um die Datenübertragung über unsere Online-Dienste vor unbefugtem Zugriff zu schützen, nutzen wir die TLS-/SSL-Verschlüsselungstechnologie. Dies gewährleistet eine sichere Datenübertragung zwischen unserem Server und Ihrem Browser, erkennbar an der HTTPS-Kennung in der URL-Leiste.\n\n\nFalls Datenverarbeitungen in Drittländern (außerhalb der EU und des EWR) stattfinden oder personenbezogene Daten an Dritte im Ausland übermittelt werden, erfolgt dies ausschließlich unter Einhaltung gesetzlicher Anforderungen. Sofern ein Angemessenheitsbeschluss der EU-Kommission für das betreffende Drittland vorliegt (Art. 45 DSGVO), gilt dieser als Grundlage der Übertragung. Falls kein Angemessenheitsbeschluss vorliegt, sichern Standardvertragsklauseln (Art. 46 Abs. 2 lit. c) DSGVO), eine ausdrückliche Einwilligung oder gesetzliche Erfordernisse die Übertragung ab (Art. 49 Abs. 1 DSGVO).\nWeitere Informationen zu den Angemessenheitsbeschlüssen der EU-Kommission finden Sie auf dieser Seite. Die USA bieten mit dem sogenannten „Data Privacy Framework“ (DPF) eine Regelung zur Sicherstellung eines angemessenen Datenschutzniveaus, das durch die EU-Kommission am 10.07.2023 anerkannt wurde. Die Liste der zertifizierten Unternehmen und weitere Informationen finden Sie auf der Webseite des US-Handelsministeriums unter Data Privacy Framework.\nWir informieren Sie in unseren Datenschutzhinweisen, welche Drittanbieter unter diesem Rahmen zertifiziert sind.\n\n\n\n\nFür Anfragen zum Datenschutz können Sie sich an uns wenden:\nProf. Dr. habil. Sebastian Sauer\nResidenzstr. 10, 90522 Ansbach\nsebastian.sauer@hs-ansbach.de\n\n\n\nWir behalten uns vor, diese Datenschutzhinweise jederzeit anzupassen, um sie an geänderte Rechtslagen oder bei Änderungen des Dienstes sowie der Datenverarbeitung anzupassen.\nStand: 15. November 2024"
  },
  {
    "objectID": "data-privacy.html#einleitung",
    "href": "data-privacy.html#einleitung",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Diese Datenschutzhinweise informieren Sie über die Art, den Umfang und den Zweck der Verarbeitung von personenbezogenen Daten (nachfolgend “Daten”) im Rahmen der Nutzung dieser Webseite (nachfolgend “Webseite”), die auf GitHub gehostet wird.\n\n\nProf. Dr. habil. Sebastian Sauer, Residenzstr. 10, 90522 Ansbach, sebastian.sauer@hs-ansbach.de\n\n\n\nUnsere Webseite wird von GitHub Inc., 88 Colin P. Kelly Jr. St, San Francisco, CA 94107, USA (“GitHub”) gehostet. GitHub verarbeitet in unserem Auftrag Daten von Webseitenbesuchern (z.B. IP-Adressen). Dies ist für den Betrieb der Webseite und die Bereitstellung von Inhalten erforderlich. GitHub ist unter dem Privacy-Shield-Abkommen zertifiziert und bietet hierdurch eine Garantie, das europäische Datenschutzrecht einzuhalten (https://www.privacyshield.gov/participant?id=a2zt0000000GnywAAC&status=Active).\nWeitere Informationen zum Datenschutz bei GitHub finden Sie in der Datenschutzerklärung von GitHub: https://docs.github.com/de/site-policy/privacy-policies/github-general-privacy-statement"
  },
  {
    "objectID": "data-privacy.html#datenerhebung-und--verarbeitung",
    "href": "data-privacy.html#datenerhebung-und--verarbeitung",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Bei jedem Zugriff auf unsere Webseite erfasst GitHub automatisiert Daten und speichert diese in Server-Log-Dateien. Zu diesen Daten gehören: IP-Adresse des zugreifenden Geräts Datum und Uhrzeit des Zugriffs Name und URL der abgerufenen Datei Webseite, von der aus der Zugriff erfolgt (Referrer-URL) Verwendeter Browser und ggf. das Betriebssystem des zugreifenden Geräts Name des Access-Providers\nDie Verarbeitung dieser Daten erfolgt, um die Funktionsfähigkeit der Webseite sicherzustellen, die Nutzung der Webseite zu analysieren und unser Angebot zu verbessern. Rechtsgrundlage für die Datenverarbeitung ist Art. 6 Abs. 1 lit. f DSGVO (berechtigtes Interesse). Unser berechtigtes Interesse liegt in den oben genannten Zwecken.\n\n\n\nUnsere Webseite verwendet keine Cookies.\n\n\n\nEs können Inhalte von Drittanbietern wie Videos, Schriftarten oder Karten eingebunden sein. Beim Abruf dieser Inhalte wird Ihre IP-Adresse möglicherweise an den Drittanbieter übertragen. Für weitere Informationen konsultiere bitte die Datenschutzrichtlinien der jeweiligen Anbieter."
  },
  {
    "objectID": "data-privacy.html#ihre-rechte",
    "href": "data-privacy.html#ihre-rechte",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Sie habengegenüber uns folgende Rechte hinsichtlich der dich betreffenden personenbezogenen Daten: Recht auf Auskunft (Art. 15 DSGVO) Recht auf Berichtigung (Art. 16 DSGVO) Recht auf Löschung (Art. 17 DSGVO) Recht auf Einschränkung der Verarbeitung (Art. 18 DSGVO) Recht auf Datenübertragbarkeit (Art. 20 DSGVO) Recht auf Widerspruch gegen die Verarbeitung (Art. 21 DSGVO)\nSie haben zudem das Recht, sich bei einer Datenschutz-Aufsichtsbehörde über die Verarbeitung deiner personenbezogenen Daten durch uns zu beschweren."
  },
  {
    "objectID": "data-privacy.html#anwendbare-rechtsgrundlagen",
    "href": "data-privacy.html#anwendbare-rechtsgrundlagen",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Nachstehend geben wir Ihnen eine Übersicht der rechtlichen Grundlagen der DSGVO, auf deren Basis personenbezogene Daten auf dieser Webseite verarbeitet werden. Bitte beachten Sie, dass neben den Regelungen der DSGVO auch nationale Datenschutzvorgaben in Ihrem oder unserem Land relevant sein können. Sofern in Einzelfällen spezifische Rechtsgrundlagen gelten, werden diese in der Datenschutzerklärung gesondert erwähnt.\n\n\nDie Verarbeitung personenbezogener Daten ist erforderlich zur Erfüllung eines Vertrags, bei dem die betroffene Person Vertragspartei ist, oder zur Durchführung vorvertraglicher Maßnahmen, die auf Anfrage der betroffenen Person erfolgen.\n\n\n\nDie Datenverarbeitung erfolgt zur Wahrung berechtigter Interessen des Verantwortlichen oder eines Dritten, sofern keine entgegenstehenden Interessen, Grundrechte oder Grundfreiheiten der betroffenen Person, die den Schutz ihrer personenbezogenen Daten erfordern, überwiegen.\n\n\n\nNeben der DSGVO gelten in Deutschland nationale Datenschutzvorgaben, insbesondere das Bundesdatenschutzgesetz (BDSG). Das BDSG beinhaltet spezielle Regelungen zum Recht auf Auskunft, Löschung, Widerspruch, zur Verarbeitung besonderer Kategorien personenbezogener Daten, zur Verarbeitung für andere Zwecke sowie zur Datenübermittlung und zu automatisierten Einzelentscheidungen einschließlich Profiling. In bestimmten Fällen können auch Datenschutzgesetze der Bundesländer Anwendung finden.\n\n\n\nDiese Datenschutzhinweise berücksichtigen die Vorgaben sowohl der DSGVO als auch des Schweizer Datenschutzgesetzes (DSG). Zur besseren Verständlichkeit und zur Vermeidung wiederholter Begriffsdefinitionen werden die Begriffe der DSGVO verwendet. Begriffe wie „Verarbeitung“, „personenbezogene Daten“, „berechtigtes Interesse“ und „besondere Kategorien von Daten“ entsprechen inhaltlich den Begriffen „Bearbeitung“, „Personendaten“, „überwiegendes Interesse“ und „besonders schützenswerte Personendaten“ des Schweizer DSG. Die genaue Auslegung und Anwendung erfolgt jedoch gemäß den Vorgaben des Schweizer DSG."
  },
  {
    "objectID": "data-privacy.html#sicherheitsmaßnahmen",
    "href": "data-privacy.html#sicherheitsmaßnahmen",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Wir setzen angemessene technische und organisatorische Maßnahmen zum Schutz Ihrer Daten entsprechend den gesetzlichen Anforderungen um. Dabei berücksichtigen wir den aktuellen Stand der Technik, die Implementierungskosten, Art, Umfang, Umstände und Zweck der Verarbeitung sowie die Wahrscheinlichkeit und Schwere möglicher Risiken für die Rechte und Freiheiten betroffener Personen.\nZu den Schutzmaßnahmen gehören insbesondere: Sicherstellung der Vertraulichkeit, Integrität und Verfügbarkeit von Daten durch Kontrolle des Zugriffs auf die Daten und die Infrastruktur, der Eingaben, Weitergaben und Trennungen von Daten. Zudem haben wir Verfahren eingerichtet, um die Rechte betroffener Personen zu gewährleisten, Daten zu löschen und angemessen auf Bedrohungen zu reagieren. Bereits in der Entwicklung und Auswahl von Hard- und Software sowie Verfahren berücksichtigen wir Datenschutzprinzipien wie Datenschutz durch Technikgestaltung und datenschutzfreundliche Voreinstellungen.\nSicherung von Online-Verbindungen mit TLS-/SSL-Verschlüsselung (HTTPS) Um die Datenübertragung über unsere Online-Dienste vor unbefugtem Zugriff zu schützen, nutzen wir die TLS-/SSL-Verschlüsselungstechnologie. Dies gewährleistet eine sichere Datenübertragung zwischen unserem Server und Ihrem Browser, erkennbar an der HTTPS-Kennung in der URL-Leiste.\n\n\nFalls Datenverarbeitungen in Drittländern (außerhalb der EU und des EWR) stattfinden oder personenbezogene Daten an Dritte im Ausland übermittelt werden, erfolgt dies ausschließlich unter Einhaltung gesetzlicher Anforderungen. Sofern ein Angemessenheitsbeschluss der EU-Kommission für das betreffende Drittland vorliegt (Art. 45 DSGVO), gilt dieser als Grundlage der Übertragung. Falls kein Angemessenheitsbeschluss vorliegt, sichern Standardvertragsklauseln (Art. 46 Abs. 2 lit. c) DSGVO), eine ausdrückliche Einwilligung oder gesetzliche Erfordernisse die Übertragung ab (Art. 49 Abs. 1 DSGVO).\nWeitere Informationen zu den Angemessenheitsbeschlüssen der EU-Kommission finden Sie auf dieser Seite. Die USA bieten mit dem sogenannten „Data Privacy Framework“ (DPF) eine Regelung zur Sicherstellung eines angemessenen Datenschutzniveaus, das durch die EU-Kommission am 10.07.2023 anerkannt wurde. Die Liste der zertifizierten Unternehmen und weitere Informationen finden Sie auf der Webseite des US-Handelsministeriums unter Data Privacy Framework.\nWir informieren Sie in unseren Datenschutzhinweisen, welche Drittanbieter unter diesem Rahmen zertifiziert sind."
  },
  {
    "objectID": "data-privacy.html#kontakt",
    "href": "data-privacy.html#kontakt",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Für Anfragen zum Datenschutz können Sie sich an uns wenden:\nProf. Dr. habil. Sebastian Sauer\nResidenzstr. 10, 90522 Ansbach\nsebastian.sauer@hs-ansbach.de"
  },
  {
    "objectID": "data-privacy.html#änderung-der-datenschutzhinweise",
    "href": "data-privacy.html#änderung-der-datenschutzhinweise",
    "title": "1 Datenschutzhinweise",
    "section": "",
    "text": "Wir behalten uns vor, diese Datenschutzhinweise jederzeit anzupassen, um sie an geänderte Rechtslagen oder bei Änderungen des Dienstes sowie der Datenverarbeitung anzupassen.\nStand: 15. November 2024"
  },
  {
    "objectID": "children/challenge09-base.html",
    "href": "children/challenge09-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Was machen die User?\n\nStellen Sie die Namen der ersten 100 Spalten im Bericht dar.\nWerten Sie die Top-10-Tätigkeiten aus, die die Besucher auf der Website durchführen, z.B. Videos anschauen. Zählen Sie dafür, welche Werte wie oft bei subtitle stehen.\nBerechnen Sie die “Glotzdauer”, d.h. wie lange die Besucher sich Videos anschauen. Berichten Sie relevante Statistiken.\nUntersuchen und visualisieren Sie, ob sich die Anzahl der Nutzer oder die Verweildauer auf der Website verändert hat im Laufe der Zeit (Wochen und Monate).\nUntersuchen und visualisieren Sie, ob sich das Verhalten in Bezug auf die Videos verändert hat im Laufe der Zeit (Wochen und Monate), v.a. im Hinblick auf die Glotzdauer.\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).\nBitte beachten Sie Hinweise zum Programmieren.\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge07-base.html",
    "href": "children/challenge07-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Verweildauer\nFür alle folgenden Aufgaben dieser Challenge: Berichten Sie zentrale deskriptive Statistiken zu Lage und Streuung. Visualisieren Sie die Verteilung.\n\nWieviel Zeit verbringen die Nutzer pro Visit?\nWie viele Aktionen führen die Nutzer pro Visit aus?\nAn welchen Tagen und zu welcher Zeit kommen die User zu HaNS?\nAn welchen Wochentagen wird die Seite bevorzugt besucht?\nZu welchen Uhrzeiten wird die Seite bevorzugt besucht?\nGeben Sie den Zeitraum der Nutzung an (von  bis ). Hier geht es um insgesamte erste (bzw. letzte) Nutzung über alle User hinweg. Gefragt ist der älteste und neueste Time Stamp, den der Server insgesamt/überhaupt protokolliert hat.\nGeben Sie den Zeitraum seit der letzten Nutzung an (pro User) und die Verteilung inkl. zentraler Statistiken (wie Mittelwert).\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline). Rendern Sie den Bericht im Format typst.\nHinweise:\n\nBitte beachten Sie Hinweise zum Programmieren.\nBei Fragen, die eine Verteilung als Antwort haben, sollten Sie die Verteilung mit statistischen Methoden beschreiben. Beispiel: “Was ist die typische Verweildauer?” - Antwort: “Die mittlere Verweildauer beträgt 3 Minuten, mit einer Standardabweichung von 2 Minuten. Die Verteilung ist rechtsschief.” Eine Visualisierung der Verteilung bietet sich an (z.B. mit einem Histogramm).\n\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge05-base.html",
    "href": "children/challenge05-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Targets-Pipeline\n\nSchreiben Sie Ihre Analyse-Pipeline als Targets-Pipeline.\nPivotieren Sie dieses Mal wie folgt: Entfernen Sie alle Spalten außer idvisit und alle Spalten, die actionDetails enthalten. Pivotieren Sie dann nur Spalten mit dem Namen vom Typ actionDetails; d.h. Sie pivotieren nur diese genannten Spaltentypen. Es sollen also drei Spalten resultieren: idvisit, name und value.\nFügen Sie am Ende der Pipeline ein Target hinzu, das den zentralen, resultierenden Dataframe als Excel-Datei exportiert (aber nicht den Dataframe im Langformat, sondern den Dataframe im “breiten” Format).\nDiskutieren Sie Vor- und Nachteile der Targets-Pipeline.\n\nTipps:\n\nLesen Sie sich die targets-Dokumentation durch.\nDiese Präsentation gibt einen guten Überblick über die Funktionsweise von Targets.\nNutzen Sie ggf. das Template für die Lösung dieser Challenge (liegt im Repo im Root-Folder).\nBeim Importieren können sich die Spaltennamen ändern, z.B. von actionDetails_XXX zu action_details_XXX.\nNutzen Sie die Funktion pivot_longer() aus dem Paket tidyr für die Pivotierung. Bei Performanzproblemen könnte sich das Paket collapse anbieten, wo es auch eine Pivotierungsfunktion gibt. Auch das Paket polar ist für hohe Performanz bekannt.\n\nAusgabeformat: R-Syntax (Targets-Pipeline).\nHinweis: Die Lösung dieser Challenge ist nicht trivial. Sie erfordert einiges an Recherche und Einarbeitung in die Targets-Pipeline.\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge03-base.html",
    "href": "children/challenge03-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Datensatz pivotieren\nAufbauend auf dem Ergebnis der letzten Challenge:\n\nListen Sie die Spaltennamen auf, aber nur max. 20. Wenn es mehr als 20 Spalten gibt, listen Sie nur die ersten 20 auf. Wenn es weniger als 20 Spalten gibt, listen Sie alle auf.\nGeben Sie Arten von Spaltennamen an, z.b. actionDetails_482_timestamp und actionDetails_327_subtitle und actionDetails_327_timestampe wären 2 verschiedene Typen von Spalten: Timestamp und Subtitle.\nPivotieren Sie den Datensatz in das Langformat. Aber nehmen Sie idvisit vom Pivotieren aus; d.h. Sie nehmen alle Spalten bis auf idvisit in das Pivotieren auf. Es sollen also drei Spalten resultieren: idvisit, name und value.\nBegrenzen Sie beim Pivotieren die Spalten auf die Spaltentypen mit dem Namen vom Typ subtitle; d.h. Sie pivotieren nur diese genannten Spaltentypen. Es sollen also drei Spalten resultieren: idvisit, name und value.\nPrüfen Sie, ob es stimmt, dass in der Spalte name die enthaltene Zahl die einzige Information ist. Anders gesagt: Außer der Zahl in den Werten name sind alle Teile der Werte konstant.\nDie Spalten, die die Werte wie actionDetails_0_subtitle nennen Sie in id um. Aus den Werten (wie actionDetails_0_subtitle) extrahieren Sie die Zahl in der Mitte des Textes (den Rest des Textes löschen).\nErläutern Sie die Funktionen zum Lang-Pivotieren aus dem Tidyverse sowie aus einem anderen R-Paket, welches angibt, schneller zu sein als die Tidyverse-Funktion (also größere Datenmengen in der gleichen Zeit schafft). Geben Sie auch einen Faktor an, um diese Funktion angibt, schneller zu sein.\n\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge01-base.html",
    "href": "children/challenge01-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Daten verstehen\nBetrachten Sie die (chronologisch) erste Datendatei und beantworten Sie folgende Fragen:\n\nWas ist die Anzahl von Zeilen und Spalten?\nEs gibt ein Muster in den Spaltennamen. Was fällt Ihnen dazu auf?\nWelche verschiedenen Spaltennamen gibt es, wenn man die Zahlen (fortlaufenden Nummern in den Spaltennamen) außer Acht lässt? Wie heißen diese (uniquen) Spalten?\nWas fällt Ihnen zur Anteil und zum Muster der fehlenden Werte auf?\nWas sind ID-Variablen und welche finden Sie im Datensatz?\nSei \\(X\\) die Anzahl der Buchstaben Ihres Vornamens und \\(Y\\) die Anzahl der Buchstaben Ihres Nachnamens. Was steht in Zelle \\((X,Y)\\), also in der X. Spalte und Y. Zeile?\nWie viele unique Werte finden sind in den Spalte idVisit, visitip, visitorid, fingerprint, actiondetails_0_type, actiondetails_0_url, actiondetails_0_subtitle, actiondetail_0_eventcategory?\nListen Sie die unique Werte der o.g. Spalten auf (von der letzten Aufgabe).\nWas ist der häufigste Wert in der Spalte actiondetails_0_type und wie oft kommt dieser vor?\nVergleichen Sie die Spalten actiondetails_0_subtitle und actiondetails_0_type. Was fällt Ihnen auf?\nNennen Sie drei Forschungsfragen, die sich mit diesem Datensatz beantworten lassen könnten.\n\nWickham, Çetinkaya-Rundel, und Grolemund (2023) stellt Schulungsmaterial auch für String-Verarbeitung bereit (im Kapitel 11) und (fortgeschrittener) im folgenden Kapitel. Mit dem R-Paket lubridate kann man recht bequem mit Datums- und Zeitangaben arbeiten. Möchte man einen Teil eines Strings entfernen, so ist die Funktion str_remove hilfreich. Da hilft das Paket stringr. Möchte man mehrere Spalten auf einmal (mit summarise) zusammenfassen, so hilft u.a. die Funktion across, die die Summarise-Operation “durch”, “hinweg”, “über” (engl. across) mehrere Spalten durchführt, s. Kap. 26 in Wickham, Çetinkaya-Rundel, und Grolemund (2023).\nAusgabeformat: Quarto (Bericht)\n\n\n\n\nLiteratur\n\nWickham, Hadley, Mine Çetinkaya-Rundel, und Garrett Grolemund. 2023. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. Second edition. Beijing ; Sebastopol, CA: O’Reilly.\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "challenges.html",
    "href": "challenges.html",
    "title": "Challenges im Überblick",
    "section": "",
    "text": "Daten verstehen\nBetrachten Sie die (chronologisch) erste Datendatei und beantworten Sie folgende Fragen:\n\nWas ist die Anzahl von Zeilen und Spalten?\nEs gibt ein Muster in den Spaltennamen. Was fällt Ihnen dazu auf?\nWelche verschiedenen Spaltennamen gibt es, wenn man die Zahlen (fortlaufenden Nummern in den Spaltennamen) außer Acht lässt? Wie heißen diese (uniquen) Spalten?\nWas fällt Ihnen zur Anteil und zum Muster der fehlenden Werte auf?\nWas sind ID-Variablen und welche finden Sie im Datensatz?\nSei \\(X\\) die Anzahl der Buchstaben Ihres Vornamens und \\(Y\\) die Anzahl der Buchstaben Ihres Nachnamens. Was steht in Zelle \\((X,Y)\\), also in der X. Spalte und Y. Zeile?\nWie viele unique Werte finden sind in den Spalte idVisit, visitip, visitorid, fingerprint, actiondetails_0_type, actiondetails_0_url, actiondetails_0_subtitle, actiondetail_0_eventcategory?\nListen Sie die unique Werte der o.g. Spalten auf (von der letzten Aufgabe).\nWas ist der häufigste Wert in der Spalte actiondetails_0_type und wie oft kommt dieser vor?\nVergleichen Sie die Spalten actiondetails_0_subtitle und actiondetails_0_type. Was fällt Ihnen auf?\nNennen Sie drei Forschungsfragen, die sich mit diesem Datensatz beantworten lassen könnten.\n\nWickham, Çetinkaya-Rundel, und Grolemund (2023) stellt Schulungsmaterial auch für String-Verarbeitung bereit (im Kapitel 11) und (fortgeschrittener) im folgenden Kapitel. Mit dem R-Paket lubridate kann man recht bequem mit Datums- und Zeitangaben arbeiten. Möchte man einen Teil eines Strings entfernen, so ist die Funktion str_remove hilfreich. Da hilft das Paket stringr. Möchte man mehrere Spalten auf einmal (mit summarise) zusammenfassen, so hilft u.a. die Funktion across, die die Summarise-Operation “durch”, “hinweg”, “über” (engl. across) mehrere Spalten durchführt, s. Kap. 26 in Wickham, Çetinkaya-Rundel, und Grolemund (2023).\nAusgabeformat: Quarto (Bericht)",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#daten-verstehen",
    "href": "challenges.html#daten-verstehen",
    "title": "Challenges im Überblick",
    "section": "",
    "text": "Daten verstehen\nBetrachten Sie die (chronologisch) erste Datendatei und beantworten Sie folgende Fragen:\n\nWas ist die Anzahl von Zeilen und Spalten?\nEs gibt ein Muster in den Spaltennamen. Was fällt Ihnen dazu auf?\nWelche verschiedenen Spaltennamen gibt es, wenn man die Zahlen (fortlaufenden Nummern in den Spaltennamen) außer Acht lässt? Wie heißen diese (uniquen) Spalten?\nWas fällt Ihnen zur Anteil und zum Muster der fehlenden Werte auf?\nWas sind ID-Variablen und welche finden Sie im Datensatz?\nSei \\(X\\) die Anzahl der Buchstaben Ihres Vornamens und \\(Y\\) die Anzahl der Buchstaben Ihres Nachnamens. Was steht in Zelle \\((X,Y)\\), also in der X. Spalte und Y. Zeile?\nWie viele unique Werte finden sind in den Spalte idVisit, visitip, visitorid, fingerprint, actiondetails_0_type, actiondetails_0_url, actiondetails_0_subtitle, actiondetail_0_eventcategory?\nListen Sie die unique Werte der o.g. Spalten auf (von der letzten Aufgabe).\nWas ist der häufigste Wert in der Spalte actiondetails_0_type und wie oft kommt dieser vor?\nVergleichen Sie die Spalten actiondetails_0_subtitle und actiondetails_0_type. Was fällt Ihnen auf?\nNennen Sie drei Forschungsfragen, die sich mit diesem Datensatz beantworten lassen könnten.\n\nWickham, Çetinkaya-Rundel, und Grolemund (2023) stellt Schulungsmaterial auch für String-Verarbeitung bereit (im Kapitel 11) und (fortgeschrittener) im folgenden Kapitel. Mit dem R-Paket lubridate kann man recht bequem mit Datums- und Zeitangaben arbeiten. Möchte man einen Teil eines Strings entfernen, so ist die Funktion str_remove hilfreich. Da hilft das Paket stringr. Möchte man mehrere Spalten auf einmal (mit summarise) zusammenfassen, so hilft u.a. die Funktion across, die die Summarise-Operation “durch”, “hinweg”, “über” (engl. across) mehrere Spalten durchführt, s. Kap. 26 in Wickham, Çetinkaya-Rundel, und Grolemund (2023).\nAusgabeformat: Quarto (Bericht)",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#daten-einlesen",
    "href": "challenges.html#daten-einlesen",
    "title": "Challenges im Überblick",
    "section": "2 Daten einlesen",
    "text": "2 Daten einlesen\nDaten einlesen und aufbereiten\n\nImportieren Sie alle CSV-Dateien aus folgenden in R als Data Frames und binden Sie (zeilenweise) sie zu einem “langen” Data Frame: 2025-07-07 bis 2025-07-14\nWandeln Sie leere Strings in NAs um (für alle Spalten).\nEntfernen Sie alle leeren Zeilen und Spalten.\nEntfernen Sie alle konstanten Zeilen und Spalten.\nEntfernen Sie alle redundanten Zeilen und Spalten, d.h. Duplikate, also sich wiederholende Zeilen und Spalten.\nÜberlegen Sie die Vor- und Nachteile, wenn Sie diese Aufgaben mit Excel lösen würden.\nExportieren Sie die Datentabelle als Excel-Datei. Prüfen Sie dann die Excel-Datei; fällt Ihnen etwas Besonderes auf?\nWelche Spalten halten Sie für nicht relevant, um das Nutzerverhalten besser zu verstehen?. Begründen Sie die Auswahl.\nEntfernen Sie redundante Spalten (nach eigenem Ermessen und mit Begründung).\nBehalten Sie - neben allgemeinen Informationen zum Nutzer - nur die Spalten mit subtitle und timestamp im Namen.\nReparieren Sie die Spalten mit Datumsangaben.\nEntfernen Sie Spalten, die Bilddaten enthalten.\nEntfernen Sie Zeilen, die Daten von Admins, Developern oder lecturers enthalten.\n\nAusgabeformat: Quarto-Dokument (Bericht)",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#daten-verschlanken",
    "href": "challenges.html#daten-verschlanken",
    "title": "Challenges im Überblick",
    "section": "3 Daten verschlanken",
    "text": "3 Daten verschlanken\nDatensatz pivotieren\nAufbauend auf dem Ergebnis der letzten Challenge:\n\nListen Sie die Spaltennamen auf, aber nur max. 20. Wenn es mehr als 20 Spalten gibt, listen Sie nur die ersten 20 auf. Wenn es weniger als 20 Spalten gibt, listen Sie alle auf.\nGeben Sie Arten von Spaltennamen an, z.b. actionDetails_482_timestamp und actionDetails_327_subtitle und actionDetails_327_timestampe wären 2 verschiedene Typen von Spalten: Timestamp und Subtitle.\nPivotieren Sie den Datensatz in das Langformat. Aber nehmen Sie idvisit vom Pivotieren aus; d.h. Sie nehmen alle Spalten bis auf idvisit in das Pivotieren auf. Es sollen also drei Spalten resultieren: idvisit, name und value.\nBegrenzen Sie beim Pivotieren die Spalten auf die Spaltentypen mit dem Namen vom Typ subtitle; d.h. Sie pivotieren nur diese genannten Spaltentypen. Es sollen also drei Spalten resultieren: idvisit, name und value.\nPrüfen Sie, ob es stimmt, dass in der Spalte name die enthaltene Zahl die einzige Information ist. Anders gesagt: Außer der Zahl in den Werten name sind alle Teile der Werte konstant.\nDie Spalten, die die Werte wie actionDetails_0_subtitle nennen Sie in id um. Aus den Werten (wie actionDetails_0_subtitle) extrahieren Sie die Zahl in der Mitte des Textes (den Rest des Textes löschen).\nErläutern Sie die Funktionen zum Lang-Pivotieren aus dem Tidyverse sowie aus einem anderen R-Paket, welches angibt, schneller zu sein als die Tidyverse-Funktion (also größere Datenmengen in der gleichen Zeit schafft). Geben Sie auch einen Faktor an, um diese Funktion angibt, schneller zu sein.",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#daten-pivotieren",
    "href": "challenges.html#daten-pivotieren",
    "title": "Challenges im Überblick",
    "section": "4 Daten pivotieren",
    "text": "4 Daten pivotieren\nTargets-Pipeline\n\nSchreiben Sie Ihre Analyse-Pipeline als Targets-Pipeline.\nPivotieren Sie dieses Mal wie folgt: Entfernen Sie alle Spalten außer idvisit und alle Spalten, die actionDetails enthalten. Pivotieren Sie dann nur Spalten mit dem Namen vom Typ actionDetails; d.h. Sie pivotieren nur diese genannten Spaltentypen. Es sollen also drei Spalten resultieren: idvisit, name und value.\nFügen Sie am Ende der Pipeline ein Target hinzu, das den zentralen, resultierenden Dataframe als Excel-Datei exportiert (aber nicht den Dataframe im Langformat, sondern den Dataframe im “breiten” Format).\nDiskutieren Sie Vor- und Nachteile der Targets-Pipeline.\n\nTipps:\n\nLesen Sie sich die targets-Dokumentation durch.\nDiese Präsentation gibt einen guten Überblick über die Funktionsweise von Targets.\nNutzen Sie ggf. das Template für die Lösung dieser Challenge (liegt im Repo im Root-Folder).\nBeim Importieren können sich die Spaltennamen ändern, z.B. von actionDetails_XXX zu action_details_XXX.\nNutzen Sie die Funktion pivot_longer() aus dem Paket tidyr für die Pivotierung. Bei Performanzproblemen könnte sich das Paket collapse anbieten, wo es auch eine Pivotierungsfunktion gibt. Auch das Paket polar ist für hohe Performanz bekannt.\n\nAusgabeformat: R-Syntax (Targets-Pipeline).\nHinweis: Die Lösung dieser Challenge ist nicht trivial. Sie erfordert einiges an Recherche und Einarbeitung in die Targets-Pipeline.",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#projektmanagement",
    "href": "challenges.html#projektmanagement",
    "title": "Challenges im Überblick",
    "section": "5 Projektmanagement",
    "text": "5 Projektmanagement\nTargets-Pipeline\n\nSchreiben Sie Ihre Analyse-Pipeline als Targets-Pipeline.\nPivotieren Sie dieses Mal wie folgt: Entfernen Sie alle Spalten außer idvisit und alle Spalten, die actionDetails enthalten. Pivotieren Sie dann nur Spalten mit dem Namen vom Typ actionDetails; d.h. Sie pivotieren nur diese genannten Spaltentypen. Es sollen also drei Spalten resultieren: idvisit, name und value.\nFügen Sie am Ende der Pipeline ein Target hinzu, das den zentralen, resultierenden Dataframe als Excel-Datei exportiert (aber nicht den Dataframe im Langformat, sondern den Dataframe im “breiten” Format).\nDiskutieren Sie Vor- und Nachteile der Targets-Pipeline.\n\nTipps:\n\nLesen Sie sich die targets-Dokumentation durch.\nDiese Präsentation gibt einen guten Überblick über die Funktionsweise von Targets.\nNutzen Sie ggf. das Template für die Lösung dieser Challenge (liegt im Repo im Root-Folder).\nBeim Importieren können sich die Spaltennamen ändern, z.B. von actionDetails_XXX zu action_details_XXX.\nNutzen Sie die Funktion pivot_longer() aus dem Paket tidyr für die Pivotierung. Bei Performanzproblemen könnte sich das Paket collapse anbieten, wo es auch eine Pivotierungsfunktion gibt. Auch das Paket polar ist für hohe Performanz bekannt.\n\nAusgabeformat: R-Syntax (Targets-Pipeline).\nHinweis: Die Lösung dieser Challenge ist nicht trivial. Sie erfordert einiges an Recherche und Einarbeitung in die Targets-Pipeline.",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#großer-datensatz",
    "href": "challenges.html#großer-datensatz",
    "title": "Challenges im Überblick",
    "section": "6 Großer Datensatz",
    "text": "6 Großer Datensatz\nGroßer Datensatz\nArbeiten Sie mit Ihrer Pipeline weiter:\n\nImportieren Sie die zusätzlichen (neu eingestellten) Daten; lassen Sie die Pipeline auf dieser Basis neu durchlaufen.\nGab es Probleme beim Importieren? Wenn ja, welche? Wie haben Sie diese gelöst?\nWie viel Rechenzeit hat die Pipeline beansprucht?\nStellen Sie sicher, dass die Spaltennamen einheitlich und im Tidyverse-Stil benannt sind.\nFügen Sie ein Target hinzu, dass einen Quarto-Bericht erstellt.\nIm Quarto-Bericht schreiben Sie, wie viele Visits Ihr Datensatz umfasst.\nSchreiben Sie außerdem im Quarto-Bericht, wie viele Aktionen pro Visit stattfinden. Berichten Sie dazu relevante Statistiken und visualisieren Sie die Daten.\n\nTipps:\n\nfread aus data.table ist ähnlich zu read.csv, aber schneller.\nBei Problemen während des Importieren kann es zu Problemen kommen, wenn die Spaltentypen der CSV-Dateien als unterschiedlich erkannt werden. Ein Workaround ist es, alle Spalten auf Typ “character” zu setzen. Funktionen wie fread und read_csv bieten dafür einen Parameter.\nrbindlist aus data.table ist ähnlich zu rbind, was von map_dfr aufgerufen wird, aber schneller und weniger streng, produziert also weniger Fehlermeldungen (was von Vorteil, aber auch von Nachteil sein kann).\nWenn Sie beim Importieren keinen Erfolg haben, dann überspringen Sie diesen Schritt und arbeiten Sie mit den Daten, die Sie bereits haben.\nWenn Sie Probleme mit der Performance haben, dann können Sie die Datenmenge reduzieren, indem Sie nur die ersten paar Dateien importieren. Kleinere Datenmengen sind auch für das Debuggen nützlich.\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#verweildauer",
    "href": "challenges.html#verweildauer",
    "title": "Challenges im Überblick",
    "section": "7 Verweildauer",
    "text": "7 Verweildauer\nVerweildauer\nFür alle folgenden Aufgaben dieser Challenge: Berichten Sie zentrale deskriptive Statistiken zu Lage und Streuung. Visualisieren Sie die Verteilung.\n\nWieviel Zeit verbringen die Nutzer pro Visit?\nWie viele Aktionen führen die Nutzer pro Visit aus?\nAn welchen Tagen und zu welcher Zeit kommen die User zu HaNS?\nAn welchen Wochentagen wird die Seite bevorzugt besucht?\nZu welchen Uhrzeiten wird die Seite bevorzugt besucht?\nGeben Sie den Zeitraum der Nutzung an (von  bis ). Hier geht es um insgesamte erste (bzw. letzte) Nutzung über alle User hinweg. Gefragt ist der älteste und neueste Time Stamp, den der Server insgesamt/überhaupt protokolliert hat.\nGeben Sie den Zeitraum seit der letzten Nutzung an (pro User) und die Verteilung inkl. zentraler Statistiken (wie Mittelwert).\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline). Rendern Sie den Bericht im Format typst.\nHinweise:\n\nBitte beachten Sie Hinweise zum Programmieren.\nBei Fragen, die eine Verteilung als Antwort haben, sollten Sie die Verteilung mit statistischen Methoden beschreiben. Beispiel: “Was ist die typische Verweildauer?” - Antwort: “Die mittlere Verweildauer beträgt 3 Minuten, mit einer Standardabweichung von 2 Minuten. Die Verteilung ist rechtsschief.” Eine Visualisierung der Verteilung bietet sich an (z.B. mit einem Histogramm).",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#interaktion-mit-dem-llm",
    "href": "challenges.html#interaktion-mit-dem-llm",
    "title": "Challenges im Überblick",
    "section": "8 Interaktion mit dem LLM",
    "text": "8 Interaktion mit dem LLM\nInteraktion mit dem LLM\n\nWie oft wird (pro Monat) ein AI Transkript angefordert? (Tipp: Suche nach click_transcript_word.)\nWie oft wird (pro Monat) mit dem LLM interagiert (Tipp: llm)?\nWelcher Anteil der Visits (id_visit) interagiert mit dem LLM?\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).\nHinweise:\n\nNutzen Sie Typst als Ausgabeformat.\nBitte beachten Sie Hinweise zum Programmieren.",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#glotzdauer",
    "href": "challenges.html#glotzdauer",
    "title": "Challenges im Überblick",
    "section": "9 “Glotzdauer”",
    "text": "9 “Glotzdauer”\nWas machen die User?\n\nStellen Sie die Namen der ersten 100 Spalten im Bericht dar.\nWerten Sie die Top-10-Tätigkeiten aus, die die Besucher auf der Website durchführen, z.B. Videos anschauen. Zählen Sie dafür, welche Werte wie oft bei subtitle stehen.\nBerechnen Sie die “Glotzdauer”, d.h. wie lange die Besucher sich Videos anschauen. Berichten Sie relevante Statistiken.\nUntersuchen und visualisieren Sie, ob sich die Anzahl der Nutzer oder die Verweildauer auf der Website verändert hat im Laufe der Zeit (Wochen und Monate).\nUntersuchen und visualisieren Sie, ob sich das Verhalten in Bezug auf die Videos verändert hat im Laufe der Zeit (Wochen und Monate), v.a. im Hinblick auf die Glotzdauer.\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).\nBitte beachten Sie Hinweise zum Programmieren.",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "challenges.html#optimierung",
    "href": "challenges.html#optimierung",
    "title": "Challenges im Überblick",
    "section": "10 Optimierung",
    "text": "10 Optimierung\nOptimierung\n\nOptimieren Sie Ihre Analyse-Pipeline (der letzten Challenge) mit Blick auf Geschwindigkeit (des Durchlaufs der Pipeline). Berichten Sie die Laufzeit vor und nach der Optimierung.\nOptimieren Sie Ihre Analyse-Pipeline mit Blick auf Robustheit. Begründen Sie Ihre Entscheidungen.\nOptimieren Sie Ihre Analyse-Pipeline mit Blick auf Allgemeinheit und Flexibilität. Begründen Sie Ihre Entscheidungen.\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).\nBitte beachten Sie Hinweise zum Programmieren.",
    "crumbs": [
      "Challenges im Überblick"
    ]
  },
  {
    "objectID": "children/challenge02-base.html",
    "href": "children/challenge02-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Daten einlesen und aufbereiten\n\nImportieren Sie alle CSV-Dateien aus folgenden in R als Data Frames und binden Sie (zeilenweise) sie zu einem “langen” Data Frame: 2025-07-07 bis 2025-07-14\nWandeln Sie leere Strings in NAs um (für alle Spalten).\nEntfernen Sie alle leeren Zeilen und Spalten.\nEntfernen Sie alle konstanten Zeilen und Spalten.\nEntfernen Sie alle redundanten Zeilen und Spalten, d.h. Duplikate, also sich wiederholende Zeilen und Spalten.\nÜberlegen Sie die Vor- und Nachteile, wenn Sie diese Aufgaben mit Excel lösen würden.\nExportieren Sie die Datentabelle als Excel-Datei. Prüfen Sie dann die Excel-Datei; fällt Ihnen etwas Besonderes auf?\nWelche Spalten halten Sie für nicht relevant, um das Nutzerverhalten besser zu verstehen?. Begründen Sie die Auswahl.\nEntfernen Sie redundante Spalten (nach eigenem Ermessen und mit Begründung).\nBehalten Sie - neben allgemeinen Informationen zum Nutzer - nur die Spalten mit subtitle und timestamp im Namen.\nReparieren Sie die Spalten mit Datumsangaben.\nEntfernen Sie Spalten, die Bilddaten enthalten.\nEntfernen Sie Zeilen, die Daten von Admins, Developern oder lecturers enthalten.\n\nAusgabeformat: Quarto-Dokument (Bericht)\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge04-base.html",
    "href": "children/challenge04-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Targets-Pipeline\n\nSchreiben Sie Ihre Analyse-Pipeline als Targets-Pipeline.\nPivotieren Sie dieses Mal wie folgt: Entfernen Sie alle Spalten außer idvisit und alle Spalten, die actionDetails enthalten. Pivotieren Sie dann nur Spalten mit dem Namen vom Typ actionDetails; d.h. Sie pivotieren nur diese genannten Spaltentypen. Es sollen also drei Spalten resultieren: idvisit, name und value.\nFügen Sie am Ende der Pipeline ein Target hinzu, das den zentralen, resultierenden Dataframe als Excel-Datei exportiert (aber nicht den Dataframe im Langformat, sondern den Dataframe im “breiten” Format).\nDiskutieren Sie Vor- und Nachteile der Targets-Pipeline.\n\nTipps:\n\nLesen Sie sich die targets-Dokumentation durch.\nDiese Präsentation gibt einen guten Überblick über die Funktionsweise von Targets.\nNutzen Sie ggf. das Template für die Lösung dieser Challenge (liegt im Repo im Root-Folder).\nBeim Importieren können sich die Spaltennamen ändern, z.B. von actionDetails_XXX zu action_details_XXX.\nNutzen Sie die Funktion pivot_longer() aus dem Paket tidyr für die Pivotierung. Bei Performanzproblemen könnte sich das Paket collapse anbieten, wo es auch eine Pivotierungsfunktion gibt. Auch das Paket polar ist für hohe Performanz bekannt.\n\nAusgabeformat: R-Syntax (Targets-Pipeline).\nHinweis: Die Lösung dieser Challenge ist nicht trivial. Sie erfordert einiges an Recherche und Einarbeitung in die Targets-Pipeline.\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge06-base.html",
    "href": "children/challenge06-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Großer Datensatz\nArbeiten Sie mit Ihrer Pipeline weiter:\n\nImportieren Sie die zusätzlichen (neu eingestellten) Daten; lassen Sie die Pipeline auf dieser Basis neu durchlaufen.\nGab es Probleme beim Importieren? Wenn ja, welche? Wie haben Sie diese gelöst?\nWie viel Rechenzeit hat die Pipeline beansprucht?\nStellen Sie sicher, dass die Spaltennamen einheitlich und im Tidyverse-Stil benannt sind.\nFügen Sie ein Target hinzu, dass einen Quarto-Bericht erstellt.\nIm Quarto-Bericht schreiben Sie, wie viele Visits Ihr Datensatz umfasst.\nSchreiben Sie außerdem im Quarto-Bericht, wie viele Aktionen pro Visit stattfinden. Berichten Sie dazu relevante Statistiken und visualisieren Sie die Daten.\n\nTipps:\n\nfread aus data.table ist ähnlich zu read.csv, aber schneller.\nBei Problemen während des Importieren kann es zu Problemen kommen, wenn die Spaltentypen der CSV-Dateien als unterschiedlich erkannt werden. Ein Workaround ist es, alle Spalten auf Typ “character” zu setzen. Funktionen wie fread und read_csv bieten dafür einen Parameter.\nrbindlist aus data.table ist ähnlich zu rbind, was von map_dfr aufgerufen wird, aber schneller und weniger streng, produziert also weniger Fehlermeldungen (was von Vorteil, aber auch von Nachteil sein kann).\nWenn Sie beim Importieren keinen Erfolg haben, dann überspringen Sie diesen Schritt und arbeiten Sie mit den Daten, die Sie bereits haben.\nWenn Sie Probleme mit der Performance haben, dann können Sie die Datenmenge reduzieren, indem Sie nur die ersten paar Dateien importieren. Kleinere Datenmengen sind auch für das Debuggen nützlich.\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge08-base.html",
    "href": "children/challenge08-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Interaktion mit dem LLM\n\nWie oft wird (pro Monat) ein AI Transkript angefordert? (Tipp: Suche nach click_transcript_word.)\nWie oft wird (pro Monat) mit dem LLM interagiert (Tipp: llm)?\nWelcher Anteil der Visits (id_visit) interagiert mit dem LLM?\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).\nHinweise:\n\nNutzen Sie Typst als Ausgabeformat.\nBitte beachten Sie Hinweise zum Programmieren.\n\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "children/challenge10-base.html",
    "href": "children/challenge10-base.html",
    "title": "hans-hackathon",
    "section": "",
    "text": "Optimierung\n\nOptimieren Sie Ihre Analyse-Pipeline (der letzten Challenge) mit Blick auf Geschwindigkeit (des Durchlaufs der Pipeline). Berichten Sie die Laufzeit vor und nach der Optimierung.\nOptimieren Sie Ihre Analyse-Pipeline mit Blick auf Robustheit. Begründen Sie Ihre Entscheidungen.\nOptimieren Sie Ihre Analyse-Pipeline mit Blick auf Allgemeinheit und Flexibilität. Begründen Sie Ihre Entscheidungen.\n\nAusgabeformat: Quarto (Bericht) und R-Syntax (Targets-Pipeline).\nBitte beachten Sie Hinweise zum Programmieren.\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d."
  },
  {
    "objectID": "einstieg.html",
    "href": "einstieg.html",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Benötigte R-Pakete für dieses Kapitel:\n\nlibrary(tidyverse)\nlibrary(here)\n\n\n\n\n\n\nSie können Funktionen, in R schreiben.\nSie können Datensätze vom Lang- und Breit-Format wechseln.\nSie können Wiederholungsstrukturen wie Mapping-Funktionen anwenden.\nSie können eine dplyr-Funktion auf mehrere Spalten gleichzeitig anwenden.\nSie können Textdaten analysieren.\nSie können mit Pfaden (relativ und absolut) umgehen.\n\n\n\n\nMachen Sie sich mit den Grundlagen von R vertraut. Die Grundlagen von R können z.B. im Online-Buch ‘Statistik1’, Kapitel ‘Daten einlesen’ wiederholt werden.\n\n\n\n\nNäheres zu Objekttypen findet sich in Sauer (2019), Kap. 5.2.\n\n\nIn R ist praktisch alles ein Objekt.\n\nDefinition 1 (Objekt (Informatik)) Ein Objekt meint ein im Computerspeicher repräsentiertes Ding, etwa eine Tabelle.\\(\\square\\)\n\n\nBeispiel 1 (Beispiele für Objekte) Vektoren und Dataframes (Tibbles) sind die vielleicht gängigsten Objektarten in R (vgl. Abbildung 1), aus Sauer (2019)).\\(\\square\\)\n\n\n\n\n\n\n\nAbbildung 1: Zentrale Objektarten in R\n\n\n\nEs gibt in R keine (Objekte für) Skalare (einzelne Zahlen). Stattdessen nutzt R Vektoren der Länge 1.\nEin nützliches Schema stammt aus Wickham, Çetinkaya-Rundel, und Grolemund (2023), s. Abbildung 2).\n\n\n\n\n\n\nAbbildung 2: Objektarten hierarchisch gegliedert\n\n\n\n\n\n\nUnter homogenen Objektiven verstehen wir Datenstrukturen, die nur eine Art von Daten (wie Text oder Ganze Zahlen) fassen. Sonstige Objekte nennen wir heterogen.\n\nHomogene Objekte\n\nVektoren\nMatrizen\n\nHeterogen\n\nListe\nDataframes (Tibbles)\n\n\n\n\nVektoren sind insofern zentral in R, als dass die übrigen Datenstrukturen auf ihnen aufbauen, vgl. Abbildung 3 aus Sauer (2019).\nReine (atomare) Vektoren in R sind eine geordnete Liste von Daten eines Typs.\n\n\n\n\n\n\nAbbildung 3: Vektoren stehen im Zentrum der Datenstrukturen in R\n\n\n\n\nein_vektor &lt;- c(1, 2, 3)\nnoch_ein_vektor &lt;- c(\"A\", \"B\", \"C\")\nlogischer_vektor &lt;- c(TRUE, FALSE, TRUE)\n\nMit str() kann man sich die Struktur eines Objektsausgeben lassen:\n\nstr(ein_vektor)\n##  num [1:3] 1 2 3\nstr(noch_ein_vektor)\n##  chr [1:3] \"A\" \"B\" \"C\"\nstr(logischer_vektor)\n##  logi [1:3] TRUE FALSE TRUE\n\nVektoren können von folgenden Typen sein:\n\nKommazahlen ( double) genannt\nGanzzahlig (integer, auch mit L für Long abgekürzt)\nText (´character`, String)\nlogische Ausdrücke (logical oder lgl) mit TRUE oder FALSE\n\nKommazahlen und Ganze Zahlen zusammen bilden den Typ numeric (numerisch) in R.\nDen Typ eines Vektors kann man mit typeof() ausgeben lassen:\n\ntypeof(ein_vektor)\n## [1] \"double\"\n\n\n\n\n\nsex &lt;- factor(c(\"Mann\", \"Frau\", \"Frau\"))\n\nInteressant:\n\nstr(sex)\n##  Factor w/ 2 levels \"Frau\",\"Mann\": 2 1 1\n\nVertiefende Informationen findet sich in Wickham, Çetinkaya-Rundel, und Grolemund (2023).\n\n\n\n\neine_liste &lt;- list(titel = \"Einführung\",\n                   woche = 1,\n                   datum = c(\"2022-03-14\", \"2202-03-21\"),\n                   lernziele = c(\"dies\", \"jenes\", \"und noch mehr\"),\n                   lehre = c(TRUE, TRUE, TRUE)\n                   )\nstr(eine_liste)\n## List of 5\n##  $ titel    : chr \"Einführung\"\n##  $ woche    : num 1\n##  $ datum    : chr [1:2] \"2022-03-14\" \"2202-03-21\"\n##  $ lernziele: chr [1:3] \"dies\" \"jenes\" \"und noch mehr\"\n##  $ lehre    : logi [1:3] TRUE TRUE TRUE\n\n\n\n\nFür tibble() brauchen wir tidyverse:\n\nlibrary(tidyverse)\n\n\n\nstudentis &lt;-\n  tibble(\n    name = c(\"Anna\", \"Berta\"),\n    motivation = c(10, 20),\n    noten = c(1.3, 1.7)\n  )\nstr(studentis)\n## tibble [2 × 3] (S3: tbl_df/tbl/data.frame)\n##  $ name      : chr [1:2] \"Anna\" \"Berta\"\n##  $ motivation: num [1:2] 10 20\n##  $ noten     : num [1:2] 1.3 1.7\n\n\n\n\n\nEinen Teil eines Objekts auszulesen, bezeichnen wir als Indizieren.\n\n\nZur Erinnerung:\n\nstr(ein_vektor)\n##  num [1:3] 1 2 3\n\n\nein_vektor[1]\n## [1] 1\nein_vektor[c(1,2)]\n## [1] 1 2\n\nAber nicht so:\n\nein_vektor[1,2]\n## Error in ein_vektor[1, 2]: incorrect number of dimensions\n\nMan darf Vektoren auch wie Listen ansprechen, also eine doppelte Eckklammer zum Indizieren verwenden\n\nein_vektor[[2]]\n## [1] 2\n\nDer Grund ist, dass Listen auch Vektoren sind, nur eben ein besonderer Fall eines Vektors:\n\nis.vector(eine_liste)\n## [1] TRUE\n\nWas passiert, wenn man bei einem Vektor der Länge 3 das 4. Element indiziert?\n\nein_vektor[4]\n## [1] NA\n\nEin schnödes NA ist die Antwort. Das ist interessant: Wir bekommen keine Fehlermeldung, sondern den Hinweis, das angesprochene Element sei leer bzw. nicht verfügbar.\nIn Sauer (2019), Kap. 5.3.1 findet man weitere Indizierungsmöglichkeiten für reine Vektoren.\n\n\n\n\neine_liste %&gt;% str()\n## List of 5\n##  $ titel    : chr \"Einführung\"\n##  $ woche    : num 1\n##  $ datum    : chr [1:2] \"2022-03-14\" \"2202-03-21\"\n##  $ lernziele: chr [1:3] \"dies\" \"jenes\" \"und noch mehr\"\n##  $ lehre    : logi [1:3] TRUE TRUE TRUE\n\nListen können wie Vektoren, also mit [ ausgelesen werden. Dann wird eine Liste zurückgegeben.\n\neine_liste[1]\n## $titel\n## [1] \"Einführung\"\neine_liste[2]\n## $woche\n## [1] 1\n\nDas hat den technischen Hintergrund, dass Listen als eine bestimmte Art von Vektoren implementiert sind.\nMann kann auch die “doppelte Eckklammer”, [[ zum Auslesen verwenden; dann wird anstelle einer Liste die einfachere Struktur eines Vektors zurückgegeben:\n\neine_liste[[1]]\n## [1] \"Einführung\"\n\nMan könnte sagen, die “äußere Schicht” des Objekts, die Liste, wird abgeschält, und man bekommnt die “innere” Schicht, den Vektor.\nMann die Elemente der Liste entweder mit ihrer Positionsnummer (1, 2, …) oder, sofern vorhanden, ihren Namen ansprechen:\n\neine_liste[[\"titel\"]]\n## [1] \"Einführung\"\n\nDann gibt es noch den Dollar-Operator, mit dem Mann benannte Elemente von Listen ansprechen kann:\n\neine_liste$titel\n## [1] \"Einführung\"\n\nMan kann auch tiefer in eine Liste hinein indizieren. Sagen wir, uns interessiert das 4. Element der Liste eine_liste - und davon das erste Element.\nDas geht dann so:\n\neine_liste[[4]][[1]] \n## [1] \"dies\"\n\nEine einfachere Art des Indizierens von Listen bietet die Funktion pluck(), aus dem Paket purrr, das Hilfen für den Umgang mit Listen bietet.\n\npluck(eine_liste, 4)\n## [1] \"dies\"          \"jenes\"         \"und noch mehr\"\n\nUnd jetzt aus dem 4. Element das 1. Element:\n\npluck(eine_liste, 4, 1)\n## [1] \"dies\"\n\nProbieren Sie mal, aus einer Liste der Länge 5 das 6. Element auszulesen:\n\neine_liste %&gt;% length()\n## [1] 5\n\n\neine_liste[[6]]\n## Error in eine_liste[[6]]: subscript out of bounds\n\nUnser Versuch wird mit einer Fehlermeldung quittiert.\nSprechen wir die Liste wie einen (atomaren) Vektor an, bekommen wir hingegen ein NA bzw. ein NULL:\n\neine_liste[6]\n## $&lt;NA&gt;\n## NULL\n\n\n\n\nTibbles lassen sich sowohl wie ein Vektor als auch wie eine Liste indizieren.\n\nstudentis[1]\n\n\n  \n\n\n\nDie Indizierung eines Tibbles mit der einfachen Eckklammer liefert einen Tibble zurück.\n\nstudentis[\"name\"]\n\n\n  \n\n\n\nMit doppelter Eckklammer bekommt man, analog zur Liste, einen Vektor zurück:\n\nstudentis[[\"name\"]]\n## [1] \"Anna\"  \"Berta\"\n\nBeim Dollar-Operator kommt auch eine Liste zurück:\n\nstudentis$name\n## [1] \"Anna\"  \"Berta\"\n\n\n\n\n\n\nTutorial zum Themen Indizieren von Listen von Jenny BC.\n\n\n\n\nNatürlich kann man auch die Tidyverse-Verben zum Indizieren verwenden. Das bietet sich an, wenn zwei Bedingungen erfüllt sind:\n\nWenn man einen Tibble als Input und als Output hat\nWenn man nicht programmieren möchte\n\n\n\n\n\nErfahrungsgemäß gibt es bei einigen Lernenden Probleme mit dem Importieren von Daten. Genauer gesagt machen die Pfade Probleme.\n\n\n\n\n\n\nTipp\n\n\n\nMan arbeite in einem RStudio-Projekt. Dort lege man z.B. auch die Daten ab. Das macht das Arbeiten mit den Pfaden einfacher.\n\n\nZentral für das Arbeiten mit Pfaden ist der Unterschied von relativen zu absoluten Pfaden.\n\nÜbungsaufgabe 1 Lesen Sich sich zum Unterschied von relativen zu absoluten Pfaden ein. Hier oder hier finden Sie einen Ansatzpunkt.\n\n\nBeispiel 2  \n\n\"C:\\Users\\sebastian.sauer\\Documents\\Github\\hans-hackathon\\input\\mtcars.csv\" ist ein absoluter Pfad.\n\"input\\mtcars.csv\" ist ein relativer Pfad.\n\n\n\nÜbungsaufgabe 2 (Daten importieren mit relativem Pfad) Laden Sie den Datensatz mtcars herunter und kopieren Sie ihn in ein Unterverzeichnis Ihres Projektordners. Das Unterverzeichnis soll hießen data. Dann importieren Sie den Datensatz, wobei Sie den Unterordner als relativen Pfad angeben:\n\nmtcars &lt;- read.csv(\"input/mtcars.csv\")\n\n\n Download \n\nÜbungsaufgabe 3 (Daten importieren mit absolutem Pfad) Importieren Sie den Datensatz mtcars mit absolutem Pfad. Was sind die Vor- und die Nachteile dieses Vorgehens?\n\n\npath_abs &lt;- \"C:\\Users\\sebastian.sauer\\Documents\\Github\\hans-hackathon\\input\\mtcars.csv\" # Pfad auf MEINER Maschine\nmtcars &lt;- read.csv(path_abs)\n\nEin Nachteil von absoluten Pfaden ist, dass sie nicht portabel sind: Mein Pfad wird auf Ihrem Computer nicht funktionieren.\nEine Hilfe bietet da das Paket here, das das aktuelle RStudio-Arbeitsverzeichnis (working directory) zurückgibt:\n\nhere()\n## [1] \"/Users/sebastiansaueruser/github-repos/hans-hackathon2025\"\n\nEntsprechend können wir uns damit portablere absolute Pfade basteln:\n\npath_abs_portable &lt;- paste0(here(),\"/\", \"input/mtcars.csv\")\npath_abs_portable\n## [1] \"/Users/sebastiansaueruser/github-repos/hans-hackathon2025/input/mtcars.csv\"\n\nmtcars &lt;- read.csv(path_abs_portable)\n\n\n\n\n\n\n\nBackslashes haben eine besondere Bedeutung in R\n\n\n\nWenn Sie Windows nutzen, ersetzen Sie am besten die Backslashes durch normale (“Forward-”)Slashes, das können Sie mit Search-Replace in RStudio erledigen.\n\n\n\npath_abs &lt;- \"C:/Users/sebastian.sauer/Documents/Github/hans-hackathon/input/mtcars.csv\"\nmtcars &lt;- read.csv(path_abs)\n## Error in file(file, \"rt\"): cannot open the connection\n\n\n\n\nManchmal findet man Datensätze im sog. langen Format vor, manchmal im breiten.\nIn der Regel müssen die Daten “tidy” sein, was meist dem langen Format entspricht, vgl. Abbildung 4 aus Sauer (2019).\n\n\n\n\n\n\nAbbildung 4: Von lang nach breit und zurück\n\n\n\nIn einer neueren Version des Tidyverse werden diese beiden Befehle umbenannt bzw. erweitert, s. Abbildung 5.\n\ngather() -&gt; pivot_longer()\nspread() -&gt; pivot_wider()\n\n\n\n\n\n\n\nAbbildung 5: Von “weit” zu “breit” und zurück, eine Animation\n\n\n\nWeitere Informationen findet sich in Wickham, Çetinkaya-Rundel, und Grolemund (2023), in diesem Abschnitt, 12.3.\n\n\n\nEine Funktion kann man sich als analog zu einer Variable vorstellen. Es ist ein Objekt, das nicht Daten, sondern Syntax beinhaltet, vgl. Abbildung 6 aus Sauer (2019).\n\n\n\n\n\n\nAbbildung 6: Sinnbild einer Funktion\n\n\n\n\nmittelwert &lt;- function(x){\n  \n  summe &lt;- sum(x, na.rm = TRUE)\n  mw &lt;- summe/length(x)\n  return(mw)\n  \n}\n\n\nmittelwert(c(1, 2, 3))\n## [1] 2\n\nEs gibt viele Bücher und Webseiten, was eine Funktion (in R) ist, wozu sie gut ist und wie man sie schreibt und nutzt. Weitere Informationen finden sich in Kapitel 19 in Wickham, Çetinkaya-Rundel, und Grolemund (2023). Alternativ findet sich ein Abschnitt dazu (28.1) in Sauer (2019).\n\nÜbungsaufgabe 4 (Schreiben Sie eine einfache Funktion) Schreiben Sie eine einfache R-Funktion und erklären Sie sie.\n\n\n\n\n\nStellen Sie sich vor, Sie haben eine Menge Emails (ein paar Zehntausend), in denen Telefonnummern mit Durchwahlen zur Firma, in der Sie arbeiten vorkommen. Sie möchten alle Emails herausfischen, die eine solche Telefonnummer beinhaltet. Da es viele Emails sind, möchten Sie die Mails nicht einzeln anpacken. Sie bräuchten einen kleinen Roboter, dem Sie sinngemäß sagen könnten:\n\n🧑‍🎓 Hey, ich hätte gerne alle Mails mit den Telefonnummern in unseren Betrieb. Aber keine andere Mail bitte sehr.\n\n\n🤖 Jippiejeh, endlich geht’s wieder los!\n\n\nTextvariablen erkennt man daran, dass ihr Inhalt mit doppelten oder einfachen Anführungszeichen ausgezeichnet ist:\n\neine_antwort &lt;- \"Die Antwort lautet 42\"\nandere_antwort &lt;- \"Die Antwort lautet 73\"\n\nWickham bieten eine gute Einführung in die Analyse von Textvariablen bzw. Textdaten.\n\n\n\nHäufig möchte man eine Operation mehrfach ausführen. Ein Beispiel wäre die Anzahl der fehlenden Werte pro Spalte auslesen. Natürlich kann man die Abfrage einfach häufig tippen, nervt aber irgendwann. Daher braucht’s Strukturen, die Wiederholungen beschreiben.\nDafür gibt es verschiedene Ansätze.\n\n\nHandelt es sich um Spalten von Tibbles, dann bietet sich die Funktion across(.col, .fns) an. across wendet eine oder mehrere Funktionen (mit .fns bezeichnet) auf die Spalten .col an.\nDas erklärt sich am besten mit einem Beispiel:\nNatürlich hätte man in diesem Fall auch anders vorgehen können:\n\nmtcars %&gt;% \n  summarise(across(.cols = everything(),\n                   .fns = mean))\n\n\n  \n\n\n\nMöchte man der Funktion .fns Parameter übergeben, so nutzt man diese Syntax (“Purrr-Lambda”):\n\nmtcars %&gt;% \n  summarise(across(.cols = everything(),\n                   .fns = ~ mean(., na.rm = TRUE)))\n\n\n  \n\n\n\nHier findet sich ein guter Überblick zu across().\n\n\n\nmap() ist eine Funktion aus dem R-Paket purrr und Teil des Tidyverse.\nmap(x, f) wenden die Funktion f auf jedes Element von x an. Ist x ein Tibble, so wird f demnach auf jede Spalte von x angewendet (“zugeordnet”, daher map), vgl. Abbildung 7 aus Sauer (2019).\n\n\n\n\n\n\nAbbildung 7: Sinnbild für map aus purrr\n\n\n\nHier ein Beispiel-Code:\n\ndata(mtcars)\n\nmtcars &lt;- mtcars %&gt;% select(1:3)  # nur die ersten 3 Spalten\n\nmap(mtcars, mean)\n## $mpg\n## [1] 20.09062\n## \n## $cyl\n## [1] 6.1875\n## \n## $disp\n## [1] 230.7219\n\nMöchte man der gemappten Funktion Parameter übergeben, nutzt man wieder die “Kringel-Schreibweise”:\n\nmap(mtcars, ~ mean(., na.rm = TRUE))\n## $mpg\n## [1] 20.09062\n## \n## $cyl\n## [1] 6.1875\n## \n## $disp\n## [1] 230.7219\n\n\n\n\nWeiteres zu map() findet sich z.B. in Wickham, Çetinkaya-Rundel, und Grolemund (2023), Kapitel 21.5 oder in Sauer (2019), Kap. 28.2.\nHier ist ein Tutorial zu map() von Jenny BC.\n\n\n\n\nManche behaupten, R sei ein Inferno.\nZum Glück gibt es auch aufmunternde Stimmen:\n\npraise::praise()\n## [1] \"You are luminous!\"\n\nHat jemand einen guten Rat für uns? Vielleicht ist der häufigste Rat, dass man die Dokumentation lesen solle.\n\n\n\nHier finden Sie einige Fallstudien, die Ihnen die Inhalte dieses Kapitels näher bringen.\n\nFallstudie Flugverspätungen\nFallstudie Getreideernte",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#lernsteuerung",
    "href": "einstieg.html#lernsteuerung",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Sie können Funktionen, in R schreiben.\nSie können Datensätze vom Lang- und Breit-Format wechseln.\nSie können Wiederholungsstrukturen wie Mapping-Funktionen anwenden.\nSie können eine dplyr-Funktion auf mehrere Spalten gleichzeitig anwenden.\nSie können Textdaten analysieren.\nSie können mit Pfaden (relativ und absolut) umgehen.\n\n\n\n\nMachen Sie sich mit den Grundlagen von R vertraut. Die Grundlagen von R können z.B. im Online-Buch ‘Statistik1’, Kapitel ‘Daten einlesen’ wiederholt werden.",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#objekttypen-in-r",
    "href": "einstieg.html#objekttypen-in-r",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Näheres zu Objekttypen findet sich in Sauer (2019), Kap. 5.2.\n\n\nIn R ist praktisch alles ein Objekt.\n\nDefinition 1 (Objekt (Informatik)) Ein Objekt meint ein im Computerspeicher repräsentiertes Ding, etwa eine Tabelle.\\(\\square\\)\n\n\nBeispiel 1 (Beispiele für Objekte) Vektoren und Dataframes (Tibbles) sind die vielleicht gängigsten Objektarten in R (vgl. Abbildung 1), aus Sauer (2019)).\\(\\square\\)\n\n\n\n\n\n\n\nAbbildung 1: Zentrale Objektarten in R\n\n\n\nEs gibt in R keine (Objekte für) Skalare (einzelne Zahlen). Stattdessen nutzt R Vektoren der Länge 1.\nEin nützliches Schema stammt aus Wickham, Çetinkaya-Rundel, und Grolemund (2023), s. Abbildung 2).\n\n\n\n\n\n\nAbbildung 2: Objektarten hierarchisch gegliedert\n\n\n\n\n\n\nUnter homogenen Objektiven verstehen wir Datenstrukturen, die nur eine Art von Daten (wie Text oder Ganze Zahlen) fassen. Sonstige Objekte nennen wir heterogen.\n\nHomogene Objekte\n\nVektoren\nMatrizen\n\nHeterogen\n\nListe\nDataframes (Tibbles)\n\n\n\n\nVektoren sind insofern zentral in R, als dass die übrigen Datenstrukturen auf ihnen aufbauen, vgl. Abbildung 3 aus Sauer (2019).\nReine (atomare) Vektoren in R sind eine geordnete Liste von Daten eines Typs.\n\n\n\n\n\n\nAbbildung 3: Vektoren stehen im Zentrum der Datenstrukturen in R\n\n\n\n\nein_vektor &lt;- c(1, 2, 3)\nnoch_ein_vektor &lt;- c(\"A\", \"B\", \"C\")\nlogischer_vektor &lt;- c(TRUE, FALSE, TRUE)\n\nMit str() kann man sich die Struktur eines Objektsausgeben lassen:\n\nstr(ein_vektor)\n##  num [1:3] 1 2 3\nstr(noch_ein_vektor)\n##  chr [1:3] \"A\" \"B\" \"C\"\nstr(logischer_vektor)\n##  logi [1:3] TRUE FALSE TRUE\n\nVektoren können von folgenden Typen sein:\n\nKommazahlen ( double) genannt\nGanzzahlig (integer, auch mit L für Long abgekürzt)\nText (´character`, String)\nlogische Ausdrücke (logical oder lgl) mit TRUE oder FALSE\n\nKommazahlen und Ganze Zahlen zusammen bilden den Typ numeric (numerisch) in R.\nDen Typ eines Vektors kann man mit typeof() ausgeben lassen:\n\ntypeof(ein_vektor)\n## [1] \"double\"\n\n\n\n\n\nsex &lt;- factor(c(\"Mann\", \"Frau\", \"Frau\"))\n\nInteressant:\n\nstr(sex)\n##  Factor w/ 2 levels \"Frau\",\"Mann\": 2 1 1\n\nVertiefende Informationen findet sich in Wickham, Çetinkaya-Rundel, und Grolemund (2023).\n\n\n\n\neine_liste &lt;- list(titel = \"Einführung\",\n                   woche = 1,\n                   datum = c(\"2022-03-14\", \"2202-03-21\"),\n                   lernziele = c(\"dies\", \"jenes\", \"und noch mehr\"),\n                   lehre = c(TRUE, TRUE, TRUE)\n                   )\nstr(eine_liste)\n## List of 5\n##  $ titel    : chr \"Einführung\"\n##  $ woche    : num 1\n##  $ datum    : chr [1:2] \"2022-03-14\" \"2202-03-21\"\n##  $ lernziele: chr [1:3] \"dies\" \"jenes\" \"und noch mehr\"\n##  $ lehre    : logi [1:3] TRUE TRUE TRUE\n\n\n\n\nFür tibble() brauchen wir tidyverse:\n\nlibrary(tidyverse)\n\n\n\nstudentis &lt;-\n  tibble(\n    name = c(\"Anna\", \"Berta\"),\n    motivation = c(10, 20),\n    noten = c(1.3, 1.7)\n  )\nstr(studentis)\n## tibble [2 × 3] (S3: tbl_df/tbl/data.frame)\n##  $ name      : chr [1:2] \"Anna\" \"Berta\"\n##  $ motivation: num [1:2] 10 20\n##  $ noten     : num [1:2] 1.3 1.7\n\n\n\n\n\nEinen Teil eines Objekts auszulesen, bezeichnen wir als Indizieren.\n\n\nZur Erinnerung:\n\nstr(ein_vektor)\n##  num [1:3] 1 2 3\n\n\nein_vektor[1]\n## [1] 1\nein_vektor[c(1,2)]\n## [1] 1 2\n\nAber nicht so:\n\nein_vektor[1,2]\n## Error in ein_vektor[1, 2]: incorrect number of dimensions\n\nMan darf Vektoren auch wie Listen ansprechen, also eine doppelte Eckklammer zum Indizieren verwenden\n\nein_vektor[[2]]\n## [1] 2\n\nDer Grund ist, dass Listen auch Vektoren sind, nur eben ein besonderer Fall eines Vektors:\n\nis.vector(eine_liste)\n## [1] TRUE\n\nWas passiert, wenn man bei einem Vektor der Länge 3 das 4. Element indiziert?\n\nein_vektor[4]\n## [1] NA\n\nEin schnödes NA ist die Antwort. Das ist interessant: Wir bekommen keine Fehlermeldung, sondern den Hinweis, das angesprochene Element sei leer bzw. nicht verfügbar.\nIn Sauer (2019), Kap. 5.3.1 findet man weitere Indizierungsmöglichkeiten für reine Vektoren.\n\n\n\n\neine_liste %&gt;% str()\n## List of 5\n##  $ titel    : chr \"Einführung\"\n##  $ woche    : num 1\n##  $ datum    : chr [1:2] \"2022-03-14\" \"2202-03-21\"\n##  $ lernziele: chr [1:3] \"dies\" \"jenes\" \"und noch mehr\"\n##  $ lehre    : logi [1:3] TRUE TRUE TRUE\n\nListen können wie Vektoren, also mit [ ausgelesen werden. Dann wird eine Liste zurückgegeben.\n\neine_liste[1]\n## $titel\n## [1] \"Einführung\"\neine_liste[2]\n## $woche\n## [1] 1\n\nDas hat den technischen Hintergrund, dass Listen als eine bestimmte Art von Vektoren implementiert sind.\nMann kann auch die “doppelte Eckklammer”, [[ zum Auslesen verwenden; dann wird anstelle einer Liste die einfachere Struktur eines Vektors zurückgegeben:\n\neine_liste[[1]]\n## [1] \"Einführung\"\n\nMan könnte sagen, die “äußere Schicht” des Objekts, die Liste, wird abgeschält, und man bekommnt die “innere” Schicht, den Vektor.\nMann die Elemente der Liste entweder mit ihrer Positionsnummer (1, 2, …) oder, sofern vorhanden, ihren Namen ansprechen:\n\neine_liste[[\"titel\"]]\n## [1] \"Einführung\"\n\nDann gibt es noch den Dollar-Operator, mit dem Mann benannte Elemente von Listen ansprechen kann:\n\neine_liste$titel\n## [1] \"Einführung\"\n\nMan kann auch tiefer in eine Liste hinein indizieren. Sagen wir, uns interessiert das 4. Element der Liste eine_liste - und davon das erste Element.\nDas geht dann so:\n\neine_liste[[4]][[1]] \n## [1] \"dies\"\n\nEine einfachere Art des Indizierens von Listen bietet die Funktion pluck(), aus dem Paket purrr, das Hilfen für den Umgang mit Listen bietet.\n\npluck(eine_liste, 4)\n## [1] \"dies\"          \"jenes\"         \"und noch mehr\"\n\nUnd jetzt aus dem 4. Element das 1. Element:\n\npluck(eine_liste, 4, 1)\n## [1] \"dies\"\n\nProbieren Sie mal, aus einer Liste der Länge 5 das 6. Element auszulesen:\n\neine_liste %&gt;% length()\n## [1] 5\n\n\neine_liste[[6]]\n## Error in eine_liste[[6]]: subscript out of bounds\n\nUnser Versuch wird mit einer Fehlermeldung quittiert.\nSprechen wir die Liste wie einen (atomaren) Vektor an, bekommen wir hingegen ein NA bzw. ein NULL:\n\neine_liste[6]\n## $&lt;NA&gt;\n## NULL\n\n\n\n\nTibbles lassen sich sowohl wie ein Vektor als auch wie eine Liste indizieren.\n\nstudentis[1]\n\n\n  \n\n\n\nDie Indizierung eines Tibbles mit der einfachen Eckklammer liefert einen Tibble zurück.\n\nstudentis[\"name\"]\n\n\n  \n\n\n\nMit doppelter Eckklammer bekommt man, analog zur Liste, einen Vektor zurück:\n\nstudentis[[\"name\"]]\n## [1] \"Anna\"  \"Berta\"\n\nBeim Dollar-Operator kommt auch eine Liste zurück:\n\nstudentis$name\n## [1] \"Anna\"  \"Berta\"\n\n\n\n\n\n\nTutorial zum Themen Indizieren von Listen von Jenny BC.\n\n\n\n\nNatürlich kann man auch die Tidyverse-Verben zum Indizieren verwenden. Das bietet sich an, wenn zwei Bedingungen erfüllt sind:\n\nWenn man einen Tibble als Input und als Output hat\nWenn man nicht programmieren möchte",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#pfade",
    "href": "einstieg.html#pfade",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Erfahrungsgemäß gibt es bei einigen Lernenden Probleme mit dem Importieren von Daten. Genauer gesagt machen die Pfade Probleme.\n\n\n\n\n\n\nTipp\n\n\n\nMan arbeite in einem RStudio-Projekt. Dort lege man z.B. auch die Daten ab. Das macht das Arbeiten mit den Pfaden einfacher.\n\n\nZentral für das Arbeiten mit Pfaden ist der Unterschied von relativen zu absoluten Pfaden.\n\nÜbungsaufgabe 1 Lesen Sich sich zum Unterschied von relativen zu absoluten Pfaden ein. Hier oder hier finden Sie einen Ansatzpunkt.\n\n\nBeispiel 2  \n\n\"C:\\Users\\sebastian.sauer\\Documents\\Github\\hans-hackathon\\input\\mtcars.csv\" ist ein absoluter Pfad.\n\"input\\mtcars.csv\" ist ein relativer Pfad.\n\n\n\nÜbungsaufgabe 2 (Daten importieren mit relativem Pfad) Laden Sie den Datensatz mtcars herunter und kopieren Sie ihn in ein Unterverzeichnis Ihres Projektordners. Das Unterverzeichnis soll hießen data. Dann importieren Sie den Datensatz, wobei Sie den Unterordner als relativen Pfad angeben:\n\nmtcars &lt;- read.csv(\"input/mtcars.csv\")\n\n\n Download \n\nÜbungsaufgabe 3 (Daten importieren mit absolutem Pfad) Importieren Sie den Datensatz mtcars mit absolutem Pfad. Was sind die Vor- und die Nachteile dieses Vorgehens?\n\n\npath_abs &lt;- \"C:\\Users\\sebastian.sauer\\Documents\\Github\\hans-hackathon\\input\\mtcars.csv\" # Pfad auf MEINER Maschine\nmtcars &lt;- read.csv(path_abs)\n\nEin Nachteil von absoluten Pfaden ist, dass sie nicht portabel sind: Mein Pfad wird auf Ihrem Computer nicht funktionieren.\nEine Hilfe bietet da das Paket here, das das aktuelle RStudio-Arbeitsverzeichnis (working directory) zurückgibt:\n\nhere()\n## [1] \"/Users/sebastiansaueruser/github-repos/hans-hackathon2025\"\n\nEntsprechend können wir uns damit portablere absolute Pfade basteln:\n\npath_abs_portable &lt;- paste0(here(),\"/\", \"input/mtcars.csv\")\npath_abs_portable\n## [1] \"/Users/sebastiansaueruser/github-repos/hans-hackathon2025/input/mtcars.csv\"\n\nmtcars &lt;- read.csv(path_abs_portable)\n\n\n\n\n\n\n\nBackslashes haben eine besondere Bedeutung in R\n\n\n\nWenn Sie Windows nutzen, ersetzen Sie am besten die Backslashes durch normale (“Forward-”)Slashes, das können Sie mit Search-Replace in RStudio erledigen.\n\n\n\npath_abs &lt;- \"C:/Users/sebastian.sauer/Documents/Github/hans-hackathon/input/mtcars.csv\"\nmtcars &lt;- read.csv(path_abs)\n## Error in file(file, \"rt\"): cannot open the connection",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#datensätze-von-lang-nach-breit-umformatieren",
    "href": "einstieg.html#datensätze-von-lang-nach-breit-umformatieren",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Manchmal findet man Datensätze im sog. langen Format vor, manchmal im breiten.\nIn der Regel müssen die Daten “tidy” sein, was meist dem langen Format entspricht, vgl. Abbildung 4 aus Sauer (2019).\n\n\n\n\n\n\nAbbildung 4: Von lang nach breit und zurück\n\n\n\nIn einer neueren Version des Tidyverse werden diese beiden Befehle umbenannt bzw. erweitert, s. Abbildung 5.\n\ngather() -&gt; pivot_longer()\nspread() -&gt; pivot_wider()\n\n\n\n\n\n\n\nAbbildung 5: Von “weit” zu “breit” und zurück, eine Animation\n\n\n\nWeitere Informationen findet sich in Wickham, Çetinkaya-Rundel, und Grolemund (2023), in diesem Abschnitt, 12.3.",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#funktionen",
    "href": "einstieg.html#funktionen",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Eine Funktion kann man sich als analog zu einer Variable vorstellen. Es ist ein Objekt, das nicht Daten, sondern Syntax beinhaltet, vgl. Abbildung 6 aus Sauer (2019).\n\n\n\n\n\n\nAbbildung 6: Sinnbild einer Funktion\n\n\n\n\nmittelwert &lt;- function(x){\n  \n  summe &lt;- sum(x, na.rm = TRUE)\n  mw &lt;- summe/length(x)\n  return(mw)\n  \n}\n\n\nmittelwert(c(1, 2, 3))\n## [1] 2\n\nEs gibt viele Bücher und Webseiten, was eine Funktion (in R) ist, wozu sie gut ist und wie man sie schreibt und nutzt. Weitere Informationen finden sich in Kapitel 19 in Wickham, Çetinkaya-Rundel, und Grolemund (2023). Alternativ findet sich ein Abschnitt dazu (28.1) in Sauer (2019).\n\nÜbungsaufgabe 4 (Schreiben Sie eine einfache Funktion) Schreiben Sie eine einfache R-Funktion und erklären Sie sie.",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#textverarbeitung",
    "href": "einstieg.html#textverarbeitung",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Stellen Sie sich vor, Sie haben eine Menge Emails (ein paar Zehntausend), in denen Telefonnummern mit Durchwahlen zur Firma, in der Sie arbeiten vorkommen. Sie möchten alle Emails herausfischen, die eine solche Telefonnummer beinhaltet. Da es viele Emails sind, möchten Sie die Mails nicht einzeln anpacken. Sie bräuchten einen kleinen Roboter, dem Sie sinngemäß sagen könnten:\n\n🧑‍🎓 Hey, ich hätte gerne alle Mails mit den Telefonnummern in unseren Betrieb. Aber keine andere Mail bitte sehr.\n\n\n🤖 Jippiejeh, endlich geht’s wieder los!\n\n\nTextvariablen erkennt man daran, dass ihr Inhalt mit doppelten oder einfachen Anführungszeichen ausgezeichnet ist:\n\neine_antwort &lt;- \"Die Antwort lautet 42\"\nandere_antwort &lt;- \"Die Antwort lautet 73\"\n\nWickham bieten eine gute Einführung in die Analyse von Textvariablen bzw. Textdaten.",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#wiederholungen-programmieren",
    "href": "einstieg.html#wiederholungen-programmieren",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Häufig möchte man eine Operation mehrfach ausführen. Ein Beispiel wäre die Anzahl der fehlenden Werte pro Spalte auslesen. Natürlich kann man die Abfrage einfach häufig tippen, nervt aber irgendwann. Daher braucht’s Strukturen, die Wiederholungen beschreiben.\nDafür gibt es verschiedene Ansätze.\n\n\nHandelt es sich um Spalten von Tibbles, dann bietet sich die Funktion across(.col, .fns) an. across wendet eine oder mehrere Funktionen (mit .fns bezeichnet) auf die Spalten .col an.\nDas erklärt sich am besten mit einem Beispiel:\nNatürlich hätte man in diesem Fall auch anders vorgehen können:\n\nmtcars %&gt;% \n  summarise(across(.cols = everything(),\n                   .fns = mean))\n\n\n  \n\n\n\nMöchte man der Funktion .fns Parameter übergeben, so nutzt man diese Syntax (“Purrr-Lambda”):\n\nmtcars %&gt;% \n  summarise(across(.cols = everything(),\n                   .fns = ~ mean(., na.rm = TRUE)))\n\n\n  \n\n\n\nHier findet sich ein guter Überblick zu across().\n\n\n\nmap() ist eine Funktion aus dem R-Paket purrr und Teil des Tidyverse.\nmap(x, f) wenden die Funktion f auf jedes Element von x an. Ist x ein Tibble, so wird f demnach auf jede Spalte von x angewendet (“zugeordnet”, daher map), vgl. Abbildung 7 aus Sauer (2019).\n\n\n\n\n\n\nAbbildung 7: Sinnbild für map aus purrr\n\n\n\nHier ein Beispiel-Code:\n\ndata(mtcars)\n\nmtcars &lt;- mtcars %&gt;% select(1:3)  # nur die ersten 3 Spalten\n\nmap(mtcars, mean)\n## $mpg\n## [1] 20.09062\n## \n## $cyl\n## [1] 6.1875\n## \n## $disp\n## [1] 230.7219\n\nMöchte man der gemappten Funktion Parameter übergeben, nutzt man wieder die “Kringel-Schreibweise”:\n\nmap(mtcars, ~ mean(., na.rm = TRUE))\n## $mpg\n## [1] 20.09062\n## \n## $cyl\n## [1] 6.1875\n## \n## $disp\n## [1] 230.7219\n\n\n\n\nWeiteres zu map() findet sich z.B. in Wickham, Çetinkaya-Rundel, und Grolemund (2023), Kapitel 21.5 oder in Sauer (2019), Kap. 28.2.\nHier ist ein Tutorial zu map() von Jenny BC.",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#r-ist-schwierig",
    "href": "einstieg.html#r-ist-schwierig",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Manche behaupten, R sei ein Inferno.\nZum Glück gibt es auch aufmunternde Stimmen:\n\npraise::praise()\n## [1] \"You are luminous!\"\n\nHat jemand einen guten Rat für uns? Vielleicht ist der häufigste Rat, dass man die Dokumentation lesen solle.",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "einstieg.html#fallstudien",
    "href": "einstieg.html#fallstudien",
    "title": "1 R, zweiter Blick",
    "section": "",
    "text": "Hier finden Sie einige Fallstudien, die Ihnen die Inhalte dieses Kapitels näher bringen.\n\nFallstudie Flugverspätungen\nFallstudie Getreideernte",
    "crumbs": [
      "R, zweiter Blick"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "Come to the HaNS-Side: we have videos.\n\n\nIn diesem Modul analysieren Sie die Klickdaten zum KI-Tool HaNS.\nZiel ist es, das Tool HaNS zu evaluieren. Die Klickdaten sollen genutzt werden, um den Nutzen des Tools für die Studierenden besser einschätzen zu können. Darüber hinaus soll verstanden werden, wie Studierende das Tool zum Lernen nutzen, und wie das Tool verbessert werden kann, um das Lernen noch erfolgreicher zu gestalten.\n\n\n\nDer grundlegende Aufbau ist, dass den Studierenden jede Woche eine “Challenge” (“Herausforderung”, im Sinne eines Aufgabenpakets) präsentiert wird, die bis zur nächsten Woche gelöst werden soll.\nIm Unterricht wird Material, das zur Lösung der Aufgabe nötig ist, besprochen oder es wird auf das Material verwiesen. In der folgenden Stunde stellt die Lehrkraft dann eine Musterlösung vor und bespricht die von den Studierenden eingereichte Lösung. Dann wird wiederum eine neue Challenge angegangen usw.\n\n\n\nDer Modulverlauf gibt einen Überblick, welches Thema in welcher Woche bzw. wann behandelt wird. Pro Woche wird ein Thema behandelt.\n\n\n\n\n\n\nTipp\n\n\n\nEs ist nützlich für Sie, den Modulverlauf immer mal wieder zu konsultieren, damit sie wissen, welche Themen als nächstes behandelt werden. \\(\\square\\)\n\n\n\n\n\nBitte beachten Sie, dass sich eine bestimmte Challenge noch ändern kann, solange sie nicht begonnen hat. Beachten Sie auch die Prüfungshinweise und sonstige Hinweise im Hinweisbuch.\n\n\n\nBitte stellen Sie sicher, dass Sie eine aktuelle Version von R auf Ihrem Computer am Laufen haben. Bitte bringen Sie einen Computer (mit Internetanschluss) in jede Stunde mit. Als Oberfläche (IDE) für R bietet sich neben RStudio auch die IDE von Posit an: Positron.\n\n\n\n\nR (Programmiersprache)\nRStudio (IDE für R)\nPositron (IDE für R, Alternative zu RStudio)\nQuarto (für Berichte) - schon vorinstalliert in RStudio und Positron\nGit (Versionsverwaltung) - optiona\nGitHub (Online-Plattform für Git-Repositories) - optional\nTidyverse (R-Paket-Sammlung für Datenanalyse)\nVim (Texteditor) - optional; VIM-Modus in RStudio und Positron ist auch möglich; Liebeserklärung an VIM\nObsidian (Notizen) - optional\nAI-Bots wie Claude, ChatGPT, Bard, etc. - optional, aber empfohlen\n\n\n\n\nNutzen Sie KI-Dienste wie ChatGPT, Claude, Bard, etc., um Ihre Produktivität zu steigern. Diese Dienste können Ihnen helfen, schneller zu programmieren, Fehler zu finden, Dokumentation zu verstehen, und vieles mehr. Seien Sie kreativ und probieren Sie verschiedene Dienste aus, um herauszufinden, welcher Dienst am besten zu Ihnen passt. IDEen wie RStudio und Positron haben oft auch Plugins oder Erweiterungen, die KI-Dienste integrieren.\n\n\n\nViel Erfolg und Spaß im Kurs!",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#gegenstand-und-ziel",
    "href": "index.html#gegenstand-und-ziel",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "In diesem Modul analysieren Sie die Klickdaten zum KI-Tool HaNS.\nZiel ist es, das Tool HaNS zu evaluieren. Die Klickdaten sollen genutzt werden, um den Nutzen des Tools für die Studierenden besser einschätzen zu können. Darüber hinaus soll verstanden werden, wie Studierende das Tool zum Lernen nutzen, und wie das Tool verbessert werden kann, um das Lernen noch erfolgreicher zu gestalten.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#kursaufbau-und-didaktik",
    "href": "index.html#kursaufbau-und-didaktik",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "Der grundlegende Aufbau ist, dass den Studierenden jede Woche eine “Challenge” (“Herausforderung”, im Sinne eines Aufgabenpakets) präsentiert wird, die bis zur nächsten Woche gelöst werden soll.\nIm Unterricht wird Material, das zur Lösung der Aufgabe nötig ist, besprochen oder es wird auf das Material verwiesen. In der folgenden Stunde stellt die Lehrkraft dann eine Musterlösung vor und bespricht die von den Studierenden eingereichte Lösung. Dann wird wiederum eine neue Challenge angegangen usw.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#modulverlauf",
    "href": "index.html#modulverlauf",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "Der Modulverlauf gibt einen Überblick, welches Thema in welcher Woche bzw. wann behandelt wird. Pro Woche wird ein Thema behandelt.\n\n\n\n\n\n\nTipp\n\n\n\nEs ist nützlich für Sie, den Modulverlauf immer mal wieder zu konsultieren, damit sie wissen, welche Themen als nächstes behandelt werden. \\(\\square\\)",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#hinweise",
    "href": "index.html#hinweise",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "Bitte beachten Sie, dass sich eine bestimmte Challenge noch ändern kann, solange sie nicht begonnen hat. Beachten Sie auch die Prüfungshinweise und sonstige Hinweise im Hinweisbuch.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#vorbereitung",
    "href": "index.html#vorbereitung",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "Bitte stellen Sie sicher, dass Sie eine aktuelle Version von R auf Ihrem Computer am Laufen haben. Bitte bringen Sie einen Computer (mit Internetanschluss) in jede Stunde mit. Als Oberfläche (IDE) für R bietet sich neben RStudio auch die IDE von Posit an: Positron.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#werkzeuge",
    "href": "index.html#werkzeuge",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "R (Programmiersprache)\nRStudio (IDE für R)\nPositron (IDE für R, Alternative zu RStudio)\nQuarto (für Berichte) - schon vorinstalliert in RStudio und Positron\nGit (Versionsverwaltung) - optiona\nGitHub (Online-Plattform für Git-Repositories) - optional\nTidyverse (R-Paket-Sammlung für Datenanalyse)\nVim (Texteditor) - optional; VIM-Modus in RStudio und Positron ist auch möglich; Liebeserklärung an VIM\nObsidian (Notizen) - optional\nAI-Bots wie Claude, ChatGPT, Bard, etc. - optional, aber empfohlen",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#nutzen-sie-ki-dienste",
    "href": "index.html#nutzen-sie-ki-dienste",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "Nutzen Sie KI-Dienste wie ChatGPT, Claude, Bard, etc., um Ihre Produktivität zu steigern. Diese Dienste können Ihnen helfen, schneller zu programmieren, Fehler zu finden, Dokumentation zu verstehen, und vieles mehr. Seien Sie kreativ und probieren Sie verschiedene Dienste aus, um herauszufinden, welcher Dienst am besten zu Ihnen passt. IDEen wie RStudio und Positron haben oft auch Plugins oder Erweiterungen, die KI-Dienste integrieren.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#los-gehts",
    "href": "index.html#los-gehts",
    "title": "Hans-Hackathon",
    "section": "",
    "text": "Viel Erfolg und Spaß im Kurs!",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "projektmanagement.html",
    "href": "projektmanagement.html",
    "title": "1 Den Überblick behalten mit Pipeline-Tools",
    "section": "",
    "text": "1 Den Überblick behalten mit Pipeline-Tools\nEine Analyse mit vielen Schritten kann leicht unübersichtlich werden. Ein anderes Problem ist, dass man viele Objekte erzeugt, als Ergebnisse der Zwischenschritte. Ändert man einen Zwischenschritt, so ändert sich der Input für alle darauf folgende Analyseschritte. Man muss also diese neu berechnen. Gefährlich wäre, würde man vergessen, diese Objekte neu zu berechnen: Man würde mit einem “veralteten” also falschen Objekt weiterarbeiten, was zwangsläufig zu falschen Ergebnissen führten würde.\nWäre es nicht schön, wenn es ein Tool gäbe, das für Sie den Überblick behält und dafür sorgt, dass die veralteten Objekte (und nur die) bei Bedarf neu berechnet werden?\nSolche Tools gibt es. Wir schauen uns dazu das Tool targets an.\nHier ist ein erstes Beispiel, und hier ist eine weitere Einführung in Targets.\nDiese Präsentation führt in Targets ein mit einer Data-Science-Anwendung.\n\n\n\n\nWiederverwendungMITZitatMit BibTeX zitieren:@online{untitled,\n  author = {},\n  langid = {de-DE}\n}\nBitte zitieren Sie diese Arbeit als:\nn.d.",
    "crumbs": [
      "Projektmanagement"
    ]
  }
]